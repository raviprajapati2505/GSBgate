<%= bootstrap_form_for(document, html: {class: 'dropzone'}) do |f| %>
    <%= f.hidden_field :scheme_mix_criterion, value: scheme_mix_criterion_id %>
    <div class="fallback">
        <%= f.file_field :document_file, hide_label: true %>
        <%= f.primary 'Upload documentation' %>
    </div>
<% end %>
<div id="dropzone-previews" class="table table-striped table-bordered" style="display:none;">
    <div class="file-row header">
        <div><strong>File name</strong></div>
        <div><strong>File size</strong></div>
        <div><strong>Upload progress</strong></div>
        <div><strong>Actions</strong></div>
    </div>
</div>
<input type="button" id="dropzone-upload-all" class="btn btn-primary" value="Upload documentation" style="display:none;" />

<% content_for :js do %>
    <script type="text/javascript">
        $(function() {
            Dropzone.options.newDocument = {
                autoProcessQueue: false, // Prevents Dropzone from uploading dropped files immediately
                paramName: 'document[document_file]',
                parallelUploads: 5,
                dictDefaultMessage: 'Drop files here or click to upload documentation.',
                previewsContainer: '#dropzone-previews',
                previewTemplate: '<div class="file-row"> <div><p class="name" data-dz-name></p><strong class="error text-danger" data-dz-errormessage></strong></div> <div><p class="size" data-dz-size></p></div> <div> <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"> <div class="progress-bar progress-bar-success" style="width:0%;" data-dz-uploadprogress></div> </div> </div> <div>        <a href="#" data-dz-remove> <i title="Delete" class="fa fa-lg fa-trash" style="padding-right: 10px;"></i></a> </div> </div>',

                init: function () {
                    documentsDropzone = this;
                    var uploadButton = $("#dropzone-upload-all");
                    var previewsContainer = $("#dropzone-previews");

                    // Process all queued files when the upload button is clicked
                    uploadButton.click(function (e) {
                        documentsDropzone.processQueue();
                        e.preventDefault;
                    });

                    // Show the previews container and upload button when one or more files are added
                    this.on("addedfile", function () {
                        previewsContainer.fadeIn();
                        uploadButton.fadeIn();
                    });
                    // Hide the previews container and upload button when all files are removed
                    this.on("removedfile", function () {
                        if (previewsContainer.children().length == 1) {
                            previewsContainer.hide();
                            uploadButton.hide();
                        }
                    });
                    // Once the upload button is clicked, the full queue can be processed
                    this.on("processing", function () {
                        this.options.autoProcessQueue = true;
                        uploadButton.prop('disabled', true);
                    });
                    // Reload the page when all uploads are completed
                    this.on("queuecomplete", function () {
                        location.reload();
                    });
                }
            };
        });
    </script>
<% end %>
