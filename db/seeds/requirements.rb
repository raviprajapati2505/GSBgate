REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "UC.4 Private Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Occupancy Calculations (total number of building users).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Architectural drawing showing transportation plan, including alternative transportation strategies/Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Drawings showing the alternative transportation infrastructure including bike racks areas, shower and lockers, plug-in stations with parking spaces.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Site Plan/ Project Plans demonstrating access, storage, and support  for all types of claimed transportation facilities.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "UC. 6 Acoustic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Site Plan showing the distance between the site and major roads or airports in close proximity.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Traffic report demonstrating average daily trips for cars and medium trucks. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Background noise survey report (if applicable).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "UC.7 Proximity to Amenities Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Architectural plan identifying the location and distance of amenities with respect to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "List of all basic amenities within the specified distance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Supporting evidences of the proposed amenities (e.g. photos).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "UC.8 Accessibility Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Site Plan indicating 480 meters zone around the site, also indicating the passible and impassible borders of project by pedestrians (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Future pedestrian networks, bridges or subways; if any.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Architectural plan identifying the site entrances and accessible entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the boundary of the site indicating if the border is passable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the labeled network of existing pedestrian and bicycle pathways extending to 480 m away from site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Occupancy calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Estimation for occupants of adjacent properties within 480 m from site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "S.8 Wind Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Site Plan showing surrounding buildings and site dimensions within the 250 m radius, illustrating building heights")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Summary report of wind boundary conditions (major wind speeds)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Computational Fluid Dynamics (CFD) simulations, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Architectural plan and drawings indicating the area measured in CFD simulations, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Post-development simulation wind speed plots and average wind speed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "S.9 Noise Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Site Plan of existing buildings within 500 m of the project site edge")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specifications of surrounding building types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Plan showing location of outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specification and Manufacturers sound data for outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Report for hourly sound pressure level measurements at the 4 test positions on an operational day")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "S.10 Light Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Relevant external lighting drawings (Site plan, plans and elevations)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Simulation result for pre and post curfew light trespass, vertical illumination levels and Upward light emission simulation result")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: "S.16 Mixed Use Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: "Architectural Plans for all claimed areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: "Area Statement/ Documentation demonstrating the gross areas of the overall building and the major occupancy types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: " List of major uses/occupancy.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "M.5 Structure Reuse On-Site Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Itemized list and area of reused structural elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Description of how the elements will be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Plans and elevations highlighting structural elements to be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "M.6 Design For Disassembly Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Intended list of permanent building elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Documentation outlining how the intended building elements designed for disassembly can be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "IE.1 Thermal Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "PMV Calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "System operations specifications with HVAC equipment schedules and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with specifications for typical occupied spaces")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Architectural drawings including sections and wall sections.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Glazing data sheets from manufacturer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Characteristic length and throw data from drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Diffuser data sheet from the manufacturer.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "IE.2 Natural Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Documentation showing the number of months that the project can utilize natural ventilation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Operable windows area calculations, and schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing the total area of the each floor.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Occupancy schedule for areas with operable windows.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "IE.3 Mechanical Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation and result of fresh outdoor air delivery by air handling units")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation of minimum required outside air based on ASHRAE 62.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Report showing equipment efficiency compared to ASHRAE 90.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Specifications and drawings showing the location of CO2 sensors")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "HVAC Equipment schedule and HVAC specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "IE.4 Illumination Levels Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Architectural plan showing section and lighting layout of the spaces being measured")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Lighting simulations and results including the location of calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "IE.6 Glare Control Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Simulation boundary condition template")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) DGI simulation result.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Relevant drawings including elevations, plans and site maps with surrounding buildings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Floor plan drawings showing windows fitted with blinds and their size with details of operation of the blinds.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Information of any shading control system and description of operation of the blinds")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Typical Floor Plan showing floor area within 7 meters of the perimeter.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Building Elevations showing window area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Section through typical floor showing potential obstructions that block the view.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Plan to demonstrate the locations of contaminant sources")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Wall sections or other drawings to demonstrate how adjacent spaces are sealed and isolated")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Mechanical drawings showing ductwork paths and air handling layout")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "HVAC specifications and equipment schedules to demonstrate the score of filtration systems")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Doors specifications illustrating self-closing doors are provided for those spaces, Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Energy and Water Sub-metering Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Low voltage schematics and Water schematics showing the number and location of sub meters. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Sub meters system controls schematic and  specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Drawings to demonstrate the location of energy and water monitoring units.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "BMS points schedule identifying sub meters.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System drawings, schedules and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Drawings that show the location of the system.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Preventive maintenance plan (ensuring that components are tested, repaired, or replaced at the intervals recommended by the manufacturer)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated amount of trips in vehicles per hour for all tenant types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "UC. 6 Acoustic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Site Plan showing the distance between the site and major roads or airports in close proximity.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Traffic report demonstrating average daily trips for cars and medium trucks. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Background noise survey report (if applicable).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "UC.7 Proximity to Amenities Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Architectural plan identifying the location and distance of amenities with respect to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "List of all basic amenities within the specified distance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Supporting evidences of the proposed amenities (e.g. photos).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "UC.8 Accessibility Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Site Plan indicating 480 meters zone around the site, also indicating the passible and impassible borders of project by pedestrians (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Future pedestrian networks, bridges or subways; if any.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Architectural plan identifying the site entrances and accessible entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the boundary of the site indicating if the border is passable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the labeled network of existing pedestrian and bicycle pathways extending to 480 m away from site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Occupancy calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Estimation for occupants of adjacent properties within 480 m from site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "S.8 Wind Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Site Plan showing surrounding buildings and site dimensions within the 250 m radius, illustrating building heights")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Summary report of wind boundary conditions (major wind speeds)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Computational Fluid Dynamics (CFD) simulations, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Architectural plan and drawings indicating the area measured in CFD simulations, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Post-development simulation wind speed plots and average wind speed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "S.9 Noise Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Site Plan of existing buildings within 500 m of the project site edge")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specifications of surrounding building types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Plan showing location of outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specification and Manufacturers sound data for outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Report for hourly sound pressure level measurements at the 4 test positions on an operational day")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "S.10 Light Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Relevant external lighting drawings (Site plan, plans and elevations)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Simulation result for pre and post curfew light trespass, vertical illumination levels and Upward light emission simulation result")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: "S.16 Mixed Use Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: "Architectural Plans for all claimed areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: "Area Statement/ Documentation demonstrating the gross areas of the overall building and the major occupancy types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: " List of major uses/occupancy.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials of tenant fit-outs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "M.5 Structure Reuse On-Site Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Itemized list and area of reused structural elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Description of how the elements will be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Plans and elevations highlighting structural elements to be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "M.6 Design For Disassembly Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Intended list of permanent building elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Documentation outlining how the intended building elements designed for disassembly can be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "IE.1 Thermal Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "PMV Calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "System operations specifications with HVAC equipment schedules and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with specifications for typical occupied spaces")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Architectural drawings including sections and wall sections.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Glazing data sheets from manufacturer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Characteristic length and throw data from drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Diffuser data sheet from the manufacturer.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Calculations of PMV of all typical spaces and undesigned spaces (per tenant type)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "IE.2 Natural Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Documentation showing the number of months that the project can utilize natural ventilation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Operable windows area calculations, and schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing the total area of the each floor.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Occupancy schedule for areas with operable windows.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "IE.3 Mechanical Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation and result of fresh outdoor air delivery by air handling units")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation of minimum required outside air based on ASHRAE 62.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Report showing equipment efficiency compared to ASHRAE 90.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Specifications and drawings showing the location of CO2 sensors")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "HVAC Equipment schedule and HVAC specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "IE.4 Illumination Levels Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Architectural plan showing section and lighting layout of the spaces being measured")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Lighting simulations and results including the location of calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "IE.6 Glare Control Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Simulation boundary condition template")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) DGI simulation result.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Relevant drawings including elevations, plans and site maps with surrounding buildings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Floor plan drawings showing windows fitted with blinds and their size with details of operation of the blinds.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Information of any shading control system and description of operation of the blinds")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Typical Floor Plan showing floor area within 7 meters of the perimeter.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Building Elevations showing window area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Section through typical floor showing potential obstructions that block the view.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Plan to demonstrate the locations of contaminant sources")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Wall sections or other drawings to demonstrate how adjacent spaces are sealed and isolated")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Mechanical drawings showing ductwork paths and air handling layout")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "HVAC specifications and equipment schedules to demonstrate the score of filtration systems")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Doors specifications illustrating self-closing doors are provided for those spaces, Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Energy and Water Sub-metering Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Low voltage schematics and Water schematics showing the number and location of sub meters. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Sub meters system controls schematic and  specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Drawings to demonstrate the location of energy and water monitoring units.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "BMS points schedule identifying sub meters.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System drawings, schedules and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Drawings that show the location of the system.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Preventive maintenance plan (ensuring that components are tested, repaired, or replaced at the intervals recommended by the manufacturer)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Submit the Water Consumption Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Landscaping and irrigation plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Rainwater and stormwater collection and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Greywater and blackwater treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Documentation showing buildings and objects that have been excluded from the Water Consumption Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Districts_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Districts", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "UC.4 Private Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Occupancy Calculations (total number of building users).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Architectural drawing showing transportation plan, including alternative transportation strategies/Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Drawings showing the alternative transportation infrastructure including bike racks areas, shower and lockers, plug-in stations with parking spaces.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Site Plan/ Project Plans demonstrating access, storage, and support  for all types of claimed transportation facilities.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "UC. 6 Acoustic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Site Plan showing the distance between the site and major roads or airports in close proximity.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Traffic report demonstrating average daily trips for cars and medium trucks. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Background noise survey report (if applicable).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "UC.7 Proximity to Amenities Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Architectural plan identifying the location and distance of amenities with respect to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "List of all basic amenities within the specified distance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Supporting evidences of the proposed amenities (e.g. photos).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "UC.8 Accessibility Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Site Plan indicating 480 meters zone around the site, also indicating the passible and impassible borders of project by pedestrians (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Future pedestrian networks, bridges or subways; if any.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Architectural plan identifying the site entrances and accessible entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the boundary of the site indicating if the border is passable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the labeled network of existing pedestrian and bicycle pathways extending to 480 m away from site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Occupancy calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Estimation for occupants of adjacent properties within 480 m from site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "S.8 Wind Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Site Plan showing surrounding buildings and site dimensions within the 250 m radius, illustrating building heights")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Summary report of wind boundary conditions (major wind speeds)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Computational Fluid Dynamics (CFD) simulations, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Architectural plan and drawings indicating the area measured in CFD simulations, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Post-development simulation wind speed plots and average wind speed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "S.9 Noise Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Site Plan of existing buildings within 500 m of the project site edge")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specifications of surrounding building types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Plan showing location of outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specification and Manufacturers sound data for outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Report for hourly sound pressure level measurements at the 4 test positions on an operational day")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "S.10 Light Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Relevant external lighting drawings (Site plan, plans and elevations)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Simulation result for pre and post curfew light trespass, vertical illumination levels and Upward light emission simulation result")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "M.5 Structure Reuse On-Site Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Itemized list and area of reused structural elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Description of how the elements will be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Plans and elevations highlighting structural elements to be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "M.6 Design For Disassembly Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Intended list of permanent building elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Documentation outlining how the intended building elements designed for disassembly can be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "IE.1 Thermal Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "PMV Calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "System operations specifications with HVAC equipment schedules and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with specifications for typical occupied spaces")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Architectural drawings including sections and wall sections.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Glazing data sheets from manufacturer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Characteristic length and throw data from drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Diffuser data sheet from the manufacturer.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Supporting documents for thermal comfort in special functional spaces (auditorium)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "IE.2 Natural Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Documentation showing the number of months that the project can utilize natural ventilation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Operable windows area calculations, and schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing the total area of the each floor.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Occupancy schedule for areas with operable windows.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "IE.3 Mechanical Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation and result of fresh outdoor air delivery by air handling units")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation of minimum required outside air based on ASHRAE 62.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Report showing equipment efficiency compared to ASHRAE 90.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Specifications and drawings showing the location of CO2 sensors")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "HVAC Equipment schedule and HVAC specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "IE.4 Illumination Levels Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Architectural plan showing section and lighting layout of the spaces being measured")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Lighting simulations and results including the location of calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "IE.6 Glare Control Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Simulation boundary condition template")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) DGI simulation result.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Relevant drawings including elevations, plans and site maps with surrounding buildings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Floor plan drawings showing windows fitted with blinds and their size with details of operation of the blinds.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Information of any shading control system and description of operation of the blinds")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Typical Floor Plan showing floor area within 7 meters of the perimeter.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Building Elevations showing window area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Section through typical floor showing potential obstructions that block the view.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Plan to demonstrate the locations of contaminant sources")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Wall sections or other drawings to demonstrate how adjacent spaces are sealed and isolated")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Mechanical drawings showing ductwork paths and air handling layout")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "HVAC specifications and equipment schedules to demonstrate the score of filtration systems")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Doors specifications illustrating self-closing doors are provided for those spaces, Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Energy and Water Sub-metering Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Low voltage schematics and Water schematics showing the number and location of sub meters. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Sub meters system controls schematic and  specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Drawings to demonstrate the location of energy and water monitoring units.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "BMS points schedule identifying sub meters.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System drawings, schedules and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Drawings that show the location of the system.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Preventive maintenance plan (ensuring that components are tested, repaired, or replaced at the intervals recommended by the manufacturer)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "UC.4 Private Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Occupancy Calculations (total number of building users).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Architectural drawing showing transportation plan, including alternative transportation strategies/Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Drawings showing the alternative transportation infrastructure including bike racks areas, shower and lockers, plug-in stations with parking spaces.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Site Plan/ Project Plans demonstrating access, storage, and support  for all types of claimed transportation facilities.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "UC. 6 Acoustic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Site Plan showing the distance between the site and major roads or airports in close proximity.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Traffic report demonstrating average daily trips for cars and medium trucks. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Background noise survey report (if applicable).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "UC.7 Proximity to Amenities Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Architectural plan identifying the location and distance of amenities with respect to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "List of all basic amenities within the specified distance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Supporting evidences of the proposed amenities (e.g. photos).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "UC.8 Accessibility Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Site Plan indicating 480 meters zone around the site, also indicating the passible and impassible borders of project by pedestrians (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Future pedestrian networks, bridges or subways; if any.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Architectural plan identifying the site entrances and accessible entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the boundary of the site indicating if the border is passable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the labeled network of existing pedestrian and bicycle pathways extending to 480 m away from site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Occupancy calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Estimation for occupants of adjacent properties within 480 m from site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "S.8 Wind Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Site Plan showing surrounding buildings and site dimensions within the 250 m radius, illustrating building heights")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Summary report of wind boundary conditions (major wind speeds)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Computational Fluid Dynamics (CFD) simulations, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Architectural plan and drawings indicating the area measured in CFD simulations, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Post-development simulation wind speed plots and average wind speed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "S.9 Noise Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Site Plan of existing buildings within 500 m of the project site edge")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specifications of surrounding building types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Plan showing location of outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specification and Manufacturers sound data for outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Report for hourly sound pressure level measurements at the 4 test positions on an operational day")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "S.10 Light Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Relevant external lighting drawings (Site plan, plans and elevations)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Simulation result for pre and post curfew light trespass, vertical illumination levels and Upward light emission simulation result")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Details of the access arrangement for wheel chairs, trolleys and beds both internally and externally to the building.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_70 = Requirement.create!(name: "Vertical Transportation Plan which performs analysis of the transport demand with respect to the quantity and size of lifts, escalators and walkways")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_70, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vertical Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_71 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_71, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Prevention against Legionella"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_71 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_71, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Prevention against Legionella"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_71 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_71, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Prevention against Legionella"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_71 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_71, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Prevention against Legionella"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_71 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_71, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Prevention against Legionella"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_71 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_71, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Prevention against Legionella"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_71 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_71, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Prevention against Legionella"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_71 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_71, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Prevention against Legionella"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_72 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_72, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse: off site"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_72 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_72, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse: off site"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_72 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_72, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse: off site"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_72 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_72, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse: off site"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "M.5 Structure Reuse On-Site Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Itemized list and area of reused structural elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Description of how the elements will be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Plans and elevations highlighting structural elements to be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "M.6 Design For Disassembly Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Intended list of permanent building elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Documentation outlining how the intended building elements designed for disassembly can be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "IE.1 Thermal Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "PMV Calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "System operations specifications with HVAC equipment schedules and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with specifications for typical occupied spaces")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Architectural drawings including sections and wall sections.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Glazing data sheets from manufacturer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Characteristic length and throw data from drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Diffuser data sheet from the manufacturer.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Full thermal model analysis")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "IE.2 Natural Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Documentation showing the number of months that the project can utilize natural ventilation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Operable windows area calculations, and schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing the total area of the each floor.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Occupancy schedule for areas with operable windows.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "IE.3 Mechanical Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation and result of fresh outdoor air delivery by air handling units")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation of minimum required outside air based on ASHRAE 62.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Report showing equipment efficiency compared to ASHRAE 90.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Specifications and drawings showing the location of CO2 sensors")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "HVAC Equipment schedule and HVAC specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "IE.4 Illumination Levels Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Architectural plan showing section and lighting layout of the spaces being measured")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Lighting simulations and results including the location of calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "IE.6 Glare Control Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Simulation boundary condition template")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) DGI simulation result.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Relevant drawings including elevations, plans and site maps with surrounding buildings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Floor plan drawings showing windows fitted with blinds and their size with details of operation of the blinds.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Information of any shading control system and description of operation of the blinds")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Typical Floor Plan showing floor area within 7 meters of the perimeter.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Building Elevations showing window area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Section through typical floor showing potential obstructions that block the view.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Plan to demonstrate the locations of contaminant sources")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Wall sections or other drawings to demonstrate how adjacent spaces are sealed and isolated")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Mechanical drawings showing ductwork paths and air handling layout")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "HVAC specifications and equipment schedules to demonstrate the score of filtration systems")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Doors specifications illustrating self-closing doors are provided for those spaces, Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Energy and Water Sub-metering Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Low voltage schematics and Water schematics showing the number and location of sub meters. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Sub meters system controls schematic and  specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Drawings to demonstrate the location of energy and water monitoring units.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "BMS points schedule identifying sub meters.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System drawings, schedules and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Drawings that show the location of the system.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Preventive maintenance plan (ensuring that components are tested, repaired, or replaced at the intervals recommended by the manufacturer)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_73 = Requirement.create!(name: "Sustainability Education & Awareness Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_73, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sustainability Education & Awareness Plan"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_73 = Requirement.create!(name: "Any supporting documentation (e.g. Print materials, digital materials, displays and signage's) that demonstrates compliance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_73, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sustainability Education & Awareness Plan"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "UC.4 Private Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Occupancy Calculations (total number of building users).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Architectural drawing showing transportation plan, including alternative transportation strategies/Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Drawings showing the alternative transportation infrastructure including bike racks areas, shower and lockers, plug-in stations with parking spaces.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Site Plan/ Project Plans demonstrating access, storage, and support  for all types of claimed transportation facilities.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "UC. 6 Acoustic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Site Plan showing the distance between the site and major roads or airports in close proximity.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Traffic report demonstrating average daily trips for cars and medium trucks. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Background noise survey report (if applicable).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "UC.7 Proximity to Amenities Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Architectural plan identifying the location and distance of amenities with respect to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "List of all basic amenities within the specified distance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Supporting evidences of the proposed amenities (e.g. photos).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "S.8 Wind Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Site Plan showing surrounding buildings and site dimensions within the 250 m radius, illustrating building heights")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Summary report of wind boundary conditions (major wind speeds)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Computational Fluid Dynamics (CFD) simulations, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Architectural plan and drawings indicating the area measured in CFD simulations, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Post-development simulation wind speed plots and average wind speed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "S.9 Noise Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Site Plan of existing buildings within 500 m of the project site edge")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specifications of surrounding building types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Plan showing location of outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specification and Manufacturers sound data for outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Report for hourly sound pressure level measurements at the 4 test positions on an operational day")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "S.10 Light Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Relevant external lighting drawings (Site plan, plans and elevations)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Simulation result for pre and post curfew light trespass, vertical illumination levels and Upward light emission simulation result")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining picnic areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Simulation results, if performed, demonstrating the picnic areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "M.5 Structure Reuse On-Site Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Itemized list and area of reused structural elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Description of how the elements will be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Plans and elevations highlighting structural elements to be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "M.6 Design For Disassembly Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Intended list of permanent building elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Documentation outlining how the intended building elements designed for disassembly can be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "IE.1 Thermal Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "PMV Calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "System operations specifications with HVAC equipment schedules and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with specifications for typical occupied spaces")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Architectural drawings including sections and wall sections.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Glazing data sheets from manufacturer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Characteristic length and throw data from drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Diffuser data sheet from the manufacturer.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Supporting documents that demonstrates that all guestrooms have individual thermostats")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "IE.2 Natural Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Documentation showing the number of months that the project can utilize natural ventilation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Operable windows area calculations, and schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing the total area of the each floor.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Occupancy schedule for areas with operable windows.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "IE.3 Mechanical Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation and result of fresh outdoor air delivery by air handling units")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation of minimum required outside air based on ASHRAE 62.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Report showing equipment efficiency compared to ASHRAE 90.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Specifications and drawings showing the location of CO2 sensors")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "HVAC Equipment schedule and HVAC specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "IE.4 Illumination Levels Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Architectural plan showing section and lighting layout of the spaces being measured")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Lighting simulations and results including the location of calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Plan to demonstrate the locations of contaminant sources")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Wall sections or other drawings to demonstrate how adjacent spaces are sealed and isolated")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Mechanical drawings showing ductwork paths and air handling layout")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "HVAC specifications and equipment schedules to demonstrate the score of filtration systems")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Doors specifications illustrating self-closing doors are provided for those spaces, Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Energy and Water Sub-metering Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Low voltage schematics and Water schematics showing the number and location of sub meters. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Sub meters system controls schematic and  specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Drawings to demonstrate the location of energy and water monitoring units.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "BMS points schedule identifying sub meters.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System drawings, schedules and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Drawings that show the location of the system.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Preventive maintenance plan (ensuring that components are tested, repaired, or replaced at the intervals recommended by the manufacturer)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "UC.4 Private Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Occupancy Calculations (total number of building users).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Architectural drawing showing transportation plan, including alternative transportation strategies/Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Drawings showing the alternative transportation infrastructure including bike racks areas, shower and lockers, plug-in stations with parking spaces.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Site Plan/ Project Plans demonstrating access, storage, and support  for all types of claimed transportation facilities.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "UC.7 Proximity to Amenities Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Architectural plan identifying the location and distance of amenities with respect to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "List of all basic amenities within the specified distance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Supporting evidences of the proposed amenities (e.g. photos).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "S.8 Wind Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Site Plan showing surrounding buildings and site dimensions within the 250 m radius, illustrating building heights")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Summary report of wind boundary conditions (major wind speeds)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Computational Fluid Dynamics (CFD) simulations, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Architectural plan and drawings indicating the area measured in CFD simulations, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Post-development simulation wind speed plots and average wind speed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "S.9 Noise Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Site Plan of existing buildings within 500 m of the project site edge")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specifications of surrounding building types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Plan showing location of outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specification and Manufacturers sound data for outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Report for hourly sound pressure level measurements at the 4 test positions on an operational day")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "S.10 Light Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Relevant external lighting drawings (Site plan, plans and elevations)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Simulation result for pre and post curfew light trespass, vertical illumination levels and Upward light emission simulation result")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "M.5 Structure Reuse On-Site Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Itemized list and area of reused structural elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Description of how the elements will be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Plans and elevations highlighting structural elements to be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "M.6 Design For Disassembly Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Intended list of permanent building elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Documentation outlining how the intended building elements designed for disassembly can be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "IE.1 Thermal Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "PMV Calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "System operations specifications with HVAC equipment schedules and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with specifications for typical occupied spaces")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Architectural drawings including sections and wall sections.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Glazing data sheets from manufacturer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Characteristic length and throw data from drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Diffuser data sheet from the manufacturer.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "IE.2 Natural Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Documentation showing the number of months that the project can utilize natural ventilation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air, excluding areas associated with industrial processes")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Operable windows area calculations, and schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing the total area of the each floor.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Occupancy schedule for areas with operable windows.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "IE.3 Mechanical Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation and result of fresh outdoor air delivery by air handling units")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation of minimum required outside air based on ASHRAE 62.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Report showing equipment efficiency compared to ASHRAE 90.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Specifications and drawings showing the location of CO2 sensors")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "HVAC Equipment schedule and HVAC specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "IE.4 Illumination Levels Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Architectural plan showing section and lighting layout of the spaces being measured")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Lighting simulations and results including the location of calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "IE.6 Glare Control Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Simulation boundary condition template")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) DGI simulation result.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Relevant drawings including elevations, plans and site maps with surrounding buildings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Floor plan drawings showing windows fitted with blinds and their size with details of operation of the blinds.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Information of any shading control system and description of operation of the blinds")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Plan to demonstrate the locations of contaminant sources")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Wall sections or other drawings to demonstrate how adjacent spaces are sealed and isolated")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Mechanical drawings showing ductwork paths and air handling layout")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "HVAC specifications and equipment schedules to demonstrate the score of filtration systems")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Doors specifications illustrating self-closing doors are provided for those spaces, Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Energy and Water Sub-metering Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Low voltage schematics and Water schematics showing the number and location of sub meters. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Sub meters system controls schematic and  specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Drawings to demonstrate the location of energy and water monitoring units.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "BMS points schedule identifying sub meters.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System drawings, schedules and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Drawings that show the location of the system.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Preventive maintenance plan (ensuring that components are tested, repaired, or replaced at the intervals recommended by the manufacturer)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load during peak hours following the Friday midday prayer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "UC. 6 Acoustic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Site Plan showing the distance between the site and major roads or airports in close proximity.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Traffic report demonstrating average daily trips for cars and medium trucks. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Background noise survey report (if applicable).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "UC.8 Accessibility Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Site Plan indicating 480 meters zone around the site, also indicating the passible and impassible borders of project by pedestrians (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Future pedestrian networks, bridges or subways; if any.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Architectural plan identifying the site entrances and accessible entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the boundary of the site indicating if the border is passable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the labeled network of existing pedestrian and bicycle pathways extending to 480 m away from site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Occupancy calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Estimation for occupants of adjacent properties within 480 m from site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "S.9 Noise Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Site Plan of existing buildings within 500 m of the project site edge")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specifications of surrounding building types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Plan showing location of outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specification and Manufacturers sound data for outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Report for hourly sound pressure level measurements at the 4 test positions on an operational day")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "IE.1 Thermal Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "PMV Calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "System operations specifications with HVAC equipment schedules and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with specifications for typical occupied spaces")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Architectural drawings including sections and wall sections.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Glazing data sheets from manufacturer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Characteristic length and throw data from drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Diffuser data sheet from the manufacturer.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "IE.2 Natural Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Documentation showing the number of months that the project can utilize natural ventilation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Operable windows area calculations, and schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing the total area of the each floor.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Occupancy schedule for areas with operable windows.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "IE.3 Mechanical Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation and result of fresh outdoor air delivery by air handling units")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation of minimum required outside air based on ASHRAE 62.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Report showing equipment efficiency compared to ASHRAE 90.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Specifications and drawings showing the location of CO2 sensors")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "HVAC Equipment schedule and HVAC specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "IE.4 Illumination Levels Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Architectural plan showing section and lighting layout of the spaces being measured")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Lighting simulations and results including the location of calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System drawings, schedules and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Drawings that show the location of the system.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Preventive maintenance plan (ensuring that components are tested, repaired, or replaced at the intervals recommended by the manufacturer)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "UC.8 Accessibility Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Site Plan indicating 480 meters zone around the site, also indicating the passible and impassible borders of project by pedestrians (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Future pedestrian networks, bridges or subways; if any.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Architectural plan identifying the site entrances and accessible entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the boundary of the site indicating if the border is passable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the labeled network of existing pedestrian and bicycle pathways extending to 480 m away from site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Occupancy calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Estimation for occupants of adjacent properties within 480 m from site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "S.9 Noise Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Site Plan of existing buildings within 500 m of the project site edge")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specifications of surrounding building types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Plan showing location of outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specification and Manufacturers sound data for outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Report for hourly sound pressure level measurements at the 4 test positions on an operational day")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "S.10 Light Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Relevant external lighting drawings (Site plan, plans and elevations)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Simulation result for pre and post curfew light trespass, vertical illumination levels and Upward light emission simulation result")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System drawings, schedules and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Drawings that show the location of the system.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Preventive maintenance plan (ensuring that components are tested, repaired, or replaced at the intervals recommended by the manufacturer)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_75 = Requirement.create!(name: "Sustainability Education & Awareness Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_75, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sustainability Education and Awareness Plan"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_75 = Requirement.create!(name: "Any supporting documentation (e.g. Print materials, digital materials, displays and signage's) that demonstrates compliance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Parks_false_CATEGORY_Management___Operations_CRITERION_75, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Parks", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sustainability Education and Awareness Plan"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "UC.7 Proximity to Amenities Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Architectural plan identifying the location and distance of amenities with respect to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "List of all basic amenities within the specified distance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Supporting evidences of the proposed amenities (e.g. photos).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "UC.8 Accessibility Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Site Plan indicating 480 meters zone around the site, also indicating the passible and impassible borders of project by pedestrians (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Future pedestrian networks, bridges or subways; if any.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Architectural plan identifying the site entrances and accessible entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the boundary of the site indicating if the border is passable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the labeled network of existing pedestrian and bicycle pathways extending to 480 m away from site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Occupancy calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Estimation for occupants of adjacent properties within 480 m from site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Station flood risk management plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "S.8 Wind Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Site Plan showing surrounding buildings and site dimensions within the 250 m radius, illustrating building heights")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Summary report of wind boundary conditions (major wind speeds)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Computational Fluid Dynamics (CFD) simulations, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Architectural plan and drawings indicating the area measured in CFD simulations, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Post-development simulation wind speed plots and average wind speed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "S.9 Noise Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Site Plan of existing buildings within 500 m of the project site edge")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specifications of surrounding building types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Plan showing location of outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specification and Manufacturers sound data for outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Report for hourly sound pressure level measurements at the 4 test positions on an operational day")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "S.10 Light Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Relevant external lighting drawings (Site plan, plans and elevations)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Simulation result for pre and post curfew light trespass, vertical illumination levels and Upward light emission simulation result")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining shaded platform and concourse areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: "S.16 Mixed Use Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: "Architectural Plans for all claimed areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: "Area Statement/ Documentation demonstrating the gross areas of the overall building and the major occupancy types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: " List of major uses/occupancy.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_72 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_72, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse: off site"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_72 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_72, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse: off site"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_72 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_72, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse: off site"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_72 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_72, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse: off site"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "M.5 Structure Reuse On-Site Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Itemized list and area of reused structural elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Description of how the elements will be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Plans and elevations highlighting structural elements to be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "M.6 Design For Disassembly Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Intended list of permanent building elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Documentation outlining how the intended building elements designed for disassembly can be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "IE.1 Thermal Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "PMV Calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "System operations specifications with HVAC equipment schedules and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with specifications for typical occupied spaces")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Architectural drawings including sections and wall sections.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Glazing data sheets from manufacturer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Characteristic length and throw data from drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Diffuser data sheet from the manufacturer.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Full thermal model analysis")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "IE.2 Natural Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Documentation showing the number of months that the project can utilize natural ventilation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Operable windows area calculations, and schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing the total area of the each floor.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Occupancy schedule for areas with operable windows.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "IE.3 Mechanical Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation and result of fresh outdoor air delivery by air handling units")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation of minimum required outside air based on ASHRAE 62.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Report showing equipment efficiency compared to ASHRAE 90.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Specifications and drawings showing the location of CO2 sensors")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "HVAC Equipment schedule and HVAC specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "IE.4 Illumination Levels Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Architectural plan showing section and lighting layout of the spaces being measured")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Lighting simulations and results including the location of calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "IE.6 Glare Control Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Simulation boundary condition template")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) DGI simulation result.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Relevant drawings including elevations, plans and site maps with surrounding buildings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Floor plan drawings showing windows fitted with blinds and their size with details of operation of the blinds.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Information of any shading control system and description of operation of the blinds")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Typical Floor Plan showing floor area within 7 meters of the perimeter.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Building Elevations showing window area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Section through typical floor showing potential obstructions that block the view.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Plan to demonstrate the locations of contaminant sources")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Wall sections or other drawings to demonstrate how adjacent spaces are sealed and isolated")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Mechanical drawings showing ductwork paths and air handling layout")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "HVAC specifications and equipment schedules to demonstrate the score of filtration systems")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Doors specifications illustrating self-closing doors are provided for those spaces, Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Energy and Water Sub-metering Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Low voltage schematics and Water schematics showing the number and location of sub meters. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Sub meters system controls schematic and  specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Drawings to demonstrate the location of energy and water monitoring units.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "BMS points schedule identifying sub meters.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System drawings, schedules and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Drawings that show the location of the system.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Preventive maintenance plan (ensuring that components are tested, repaired, or replaced at the intervals recommended by the manufacturer)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_73 = Requirement.create!(name: "Sustainability Education & Awareness Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_73, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sustainability Education & Awareness Plan"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_73 = Requirement.create!(name: "Any supporting documentation (e.g. Print materials, digital materials, displays and signage's) that demonstrates compliance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_73, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sustainability Education & Awareness Plan"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_70 = Requirement.create!(name: "Vertical Transportation Plan which performs analysis of the transport demand with respect to the quantity and size of lifts, escalators and walkways")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_70, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vertical Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "UC. 6 Acoustic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Site Plan showing the distance between the site and major roads or airports in close proximity.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Traffic report demonstrating average daily trips for cars and medium trucks. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Background noise survey report (if applicable).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "UC.7 Proximity to Amenities Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Architectural plan identifying the location and distance of amenities with respect to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "List of all basic amenities within the specified distance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Supporting evidences of the proposed amenities (e.g. photos).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "S.8 Wind Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Site Plan showing surrounding buildings and site dimensions within the 250 m radius, illustrating building heights")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Summary report of wind boundary conditions (major wind speeds)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Computational Fluid Dynamics (CFD) simulations, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Architectural plan and drawings indicating the area measured in CFD simulations, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Post-development simulation wind speed plots and average wind speed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "S.10 Light Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Relevant external lighting drawings (Site plan, plans and elevations)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Simulation result for pre and post curfew light trespass, vertical illumination levels and Upward light emission simulation result")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "IE.2 Natural Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Documentation showing the number of months that the project can utilize natural ventilation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Operable windows area calculations, and schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing the total area of the each floor.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Occupancy schedule for areas with operable windows.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "UC. 6 Acoustic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Site Plan showing the distance between the site and major roads or airports in close proximity.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Traffic report demonstrating average daily trips for cars and medium trucks. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Background noise survey report (if applicable).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "UC.7 Proximity to Amenities Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Architectural plan identifying the location and distance of amenities with respect to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "List of all basic amenities within the specified distance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Supporting evidences of the proposed amenities (e.g. photos).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Simulation results for Commuter Wait Time and sport facility Exit Time. Showing the increase in peak commuter trip time on all roads within a 5 km radius of the sport facility.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "UC.4 Private Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Occupancy Calculations (total number of building users).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Architectural drawing showing transportation plan, including alternative transportation strategies/Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Drawings showing the alternative transportation infrastructure including bike racks areas, shower and lockers, plug-in stations with parking spaces.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Site Plan/ Project Plans demonstrating access, storage, and support  for all types of claimed transportation facilities.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "UC.8 Accessibility Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Site Plan indicating 480 meters zone around the site, also indicating the passible and impassible borders of project by pedestrians (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Future pedestrian networks, bridges or subways; if any.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Architectural plan identifying the site entrances and accessible entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the boundary of the site indicating if the border is passable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the labeled network of existing pedestrian and bicycle pathways extending to 480 m away from site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Occupancy calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Estimation for occupants of adjacent properties within 480 m from site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "S.8 Wind Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Site Plan showing surrounding buildings and site dimensions within the 250 m radius, illustrating building heights")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Summary report of wind boundary conditions (major wind speeds)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Computational Fluid Dynamics (CFD) simulations, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Architectural plan and drawings indicating the area measured in CFD simulations, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_15 = Requirement.create!(name: "Post-development simulation wind speed plots and average wind speed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_15, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Adverse Wind Conditions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "S.9 Noise Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Site Plan of existing buildings within 500 m of the project site edge")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specifications of surrounding building types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Plan showing location of outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specification and Manufacturers sound data for outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Report for hourly sound pressure level measurements at the 4 test positions on an operational day")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "S.10 Light Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Relevant external lighting drawings (Site plan, plans and elevations)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Simulation result for pre and post curfew light trespass, vertical illumination levels and Upward light emission simulation result")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining picnic areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Simulation results, if performed, demonstrating the picnic areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_21 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_21, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_27 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_27, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "M.6 Design For Disassembly Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Intended list of permanent building elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Documentation outlining how the intended building elements designed for disassembly can be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "IE.1 Thermal Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "PMV Calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "System operations specifications with HVAC equipment schedules and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with specifications for typical occupied spaces")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Architectural drawings including sections and wall sections.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Glazing data sheets from manufacturer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Characteristic length and throw data from drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Diffuser data sheet from the manufacturer.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with identification of critical seats.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Sun exposure study.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "IE.2 Natural Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Documentation showing the number of months that the project can utilize natural ventilation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Operable windows area calculations, and schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing the total area of the each floor.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Occupancy schedule for areas with operable windows.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "IE.4 Illumination Levels Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Architectural plan showing section and lighting layout of the spaces being measured")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Lighting simulations and results including the location of calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "IE.6 Glare Control Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Simulation boundary condition template")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) DGI simulation result.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Relevant drawings including elevations, plans and site maps with surrounding buildings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Floor plan drawings showing windows fitted with blinds and their size with details of operation of the blinds.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Information of any shading control system and description of operation of the blinds")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Typical Floor Plan showing floor area within 7 meters of the perimeter.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Building Elevations showing window area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Section through typical floor showing potential obstructions that block the view.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Plan to demonstrate the locations of contaminant sources")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Wall sections or other drawings to demonstrate how adjacent spaces are sealed and isolated")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Mechanical drawings showing ductwork paths and air handling layout")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "HVAC specifications and equipment schedules to demonstrate the score of filtration systems")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Doors specifications illustrating self-closing doors are provided for those spaces, Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_51 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_51, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Leak Detection"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Energy and Water Sub-metering Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Low voltage schematics and Water schematics showing the number and location of sub meters. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Sub meters system controls schematic and  specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Drawings to demonstrate the location of energy and water monitoring units.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "BMS points schedule identifying sub meters.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Automated Control System drawings, schedules and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Drawings that show the location of the system.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_53 = Requirement.create!(name: "Preventive maintenance plan (ensuring that components are tested, repaired, or replaced at the intervals recommended by the manufacturer)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_53, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control System"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_73 = Requirement.create!(name: "Sustainability Education & Awareness Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_73, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sustainability Education & Awareness Plan"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_73 = Requirement.create!(name: "Any supporting documentation (e.g. Print materials, digital materials, displays and signage's) that demonstrates compliance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_73, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sustainability Education & Awareness Plan"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_2_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_2_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_2_SCHEME_Education_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_2_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_2_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_2_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_2_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_5_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_6_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_7_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_8_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Water_CRITERION_80 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_0_CERTIFICATE_2_SCHEME_Sports_false_CATEGORY_Water_CRITERION_80, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.0", renovation: false, certificate: Certificate.construction_certificate)), name: "Water Conservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "UC.4 Private Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Occupancy Calculations (total number of building users).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Architectural drawing showing transportation plan, including alternative transportation strategies/Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Drawings showing the alternative transportation infrastructure including bike racks areas, shower and lockers, plug-in stations with parking spaces.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Site Plan/ Project Plans demonstrating access, storage, and support  for all types of claimed transportation facilities.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "UC. 6 Acoustic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Site Plan showing the distance between the site and major roads or airports in close proximity.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Traffic report demonstrating average daily trips for cars and medium trucks. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Background noise survey report (if applicable).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "UC.7 Proximity to Amenities Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Architectural plan identifying the location and distance of amenities with respect to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "List of all basic amenities within the specified distance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Supporting evidences of the proposed amenities (e.g. photos).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "UC.8 Accessibility Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Site Plan indicating 480 meters zone around the site, also indicating the passible and impassible borders of project by pedestrians (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Future pedestrian networks, bridges or subways; if any.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Architectural plan identifying the site entrances and accessible entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the boundary of the site indicating if the border is passable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the labeled network of existing pedestrian and bicycle pathways extending to 480 m away from site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Occupancy calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Estimation for occupants of adjacent properties within 480 m from site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_88 = Requirement.create!(name: " Commitment Letter indicating that the project commits to demonstrating full compliance with the Descriptive-Based Evaluation requirements of the GSAS Construction Management Site Category, including S.1-Solid Waste Load, S.2-Sewer & Waterway Contamination, S.3-Dust Control, and S4-Noise Pollution")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_88, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Partial"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "S.8 Wind Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Site Plan showing surrounding buildings and site dimensions within the 250 m radius, illustrating building heights")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Summary report of wind boundary conditions (major wind speeds)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Computational Fluid Dynamics (CFD) simulations, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Architectural plan and drawings indicating the area measured in CFD simulations, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Post-development simulation wind speed plots and average wind speed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "S.9 Noise Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Site Plan of existing buildings within 500 m of the project site edge")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specifications of surrounding building types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Plan showing location of outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specification and Manufacturers sound data for outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Report for hourly sound pressure level measurements at the 4 test positions on an operational day")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "S.10 Light Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Relevant external lighting drawings (Site plan, plans and elevations)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Simulation result for pre and post curfew light trespass, vertical illumination levels and Upward light emission simulation result")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_90 = Requirement.create!(name: " Commitment letter from the owner indicating targeted  score level  in the GSAS Construction Management Certification Type (Classes A, B or C).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_90, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Full"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: "S.16 Mixed Use Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: "Architectural Plans for all claimed areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: "Area Statement/ Documentation demonstrating the gross areas of the overall building and the major occupancy types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: " List of major uses/occupancy.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "M.5 Structure Reuse On-Site Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Itemized list and area of reused structural elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Description of how the elements will be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Plans and elevations highlighting structural elements to be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "M.6 Design For Disassembly Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Intended list of permanent building elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Documentation outlining how the intended building elements designed for disassembly can be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "M.7 Life Cycle Assessment (LCA) Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Intended list of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Documentation outlining all applicable materials and the percent of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "IE.1 Thermal Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "PMV Calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "System operations specifications with HVAC equipment schedules and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with specifications for typical occupied spaces")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Architectural drawings including sections and wall sections.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Glazing data sheets from manufacturer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Characteristic length and throw data from drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Diffuser data sheet from the manufacturer.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "IE.2 Natural Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Documentation showing the number of months that the project can utilize natural ventilation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Operable windows area calculations, and schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing the total area of the each floor.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Occupancy schedule for areas with operable windows.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "IE.3 Mechanical Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation and result of fresh outdoor air delivery by air handling units")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation of minimum required outside air based on ASHRAE 62.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Report showing equipment efficiency compared to ASHRAE 90.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Specifications and drawings showing the location of CO2 sensors")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "HVAC Equipment schedule and HVAC specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "IE.4 Illumination Levels Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Architectural plan showing section and lighting layout of the spaces being measured")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Lighting simulations and results including the location of calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "IE.6 Glare Control Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Simulation boundary condition template")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) DGI simulation result.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Relevant drawings including elevations, plans and site maps with surrounding buildings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Floor plan drawings showing windows fitted with blinds and their size with details of operation of the blinds.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Information of any shading control system and description of operation of the blinds")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Typical Floor Plan showing floor area within 7 meters of the perimeter.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Building Elevations showing window area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Section through typical floor showing potential obstructions that block the view.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Plan to demonstrate the locations of contaminant sources")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Wall sections or other drawings to demonstrate how adjacent spaces are sealed and isolated")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Mechanical drawings showing ductwork paths and air handling layout")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "HVAC specifications and equipment schedules to demonstrate the score of filtration systems")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Doors specifications illustrating self-closing doors are provided for those spaces, Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Energy and Water Sub-metering Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Low voltage schematics and Water schematics showing the number and location of sub meters. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Sub meters system controls schematic and  specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Drawings to demonstrate the location of energy and water monitoring units.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "BMS points schedule identifying sub meters.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Automated Control System Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Automated Control System drawings, schedules and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Drawings that show the location of the system.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Preventive maintenance plan (ensuring that components are tested, repaired, or replaced at the intervals recommended by the manufacturer)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Commercial_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Commercial", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated amount of trips in vehicles per hour for all tenant types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "UC. 6 Acoustic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Site Plan showing the distance between the site and major roads or airports in close proximity.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Traffic report demonstrating average daily trips for cars and medium trucks. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Background noise survey report (if applicable).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "UC.7 Proximity to Amenities Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Architectural plan identifying the location and distance of amenities with respect to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "List of all basic amenities within the specified distance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Supporting evidences of the proposed amenities (e.g. photos).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "UC.8 Accessibility Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Site Plan indicating 480 meters zone around the site, also indicating the passible and impassible borders of project by pedestrians (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Future pedestrian networks, bridges or subways; if any.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Architectural plan identifying the site entrances and accessible entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the boundary of the site indicating if the border is passable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the labeled network of existing pedestrian and bicycle pathways extending to 480 m away from site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Occupancy calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Estimation for occupants of adjacent properties within 480 m from site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_88 = Requirement.create!(name: " Commitment Letter indicating that the project commits to demonstrating full compliance with the Descriptive-Based Evaluation requirements of the GSAS Construction Management Site Category, including S.1-Solid Waste Load, S.2-Sewer & Waterway Contamination, S.3-Dust Control, and S4-Noise Pollution")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_88, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Partial"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "S.8 Wind Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Site Plan showing surrounding buildings and site dimensions within the 250 m radius, illustrating building heights")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Summary report of wind boundary conditions (major wind speeds)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Computational Fluid Dynamics (CFD) simulations, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Architectural plan and drawings indicating the area measured in CFD simulations, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Post-development simulation wind speed plots and average wind speed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "S.9 Noise Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Site Plan of existing buildings within 500 m of the project site edge")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specifications of surrounding building types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Plan showing location of outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specification and Manufacturers sound data for outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Report for hourly sound pressure level measurements at the 4 test positions on an operational day")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "S.10 Light Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Relevant external lighting drawings (Site plan, plans and elevations)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Simulation result for pre and post curfew light trespass, vertical illumination levels and Upward light emission simulation result")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_90 = Requirement.create!(name: " Commitment letter from the owner indicating targeted  score level  in the GSAS Construction Management Certification Type (Classes A, B or C).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_90, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Full"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: "S.16 Mixed Use Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: "Architectural Plans for all claimed areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: "Area Statement/ Documentation demonstrating the gross areas of the overall building and the major occupancy types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_23 = Requirement.create!(name: " List of major uses/occupancy.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Site_CRITERION_23, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mixed Use"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials of tenant fit-outs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "M.5 Structure Reuse On-Site Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Itemized list and area of reused structural elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Description of how the elements will be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Plans and elevations highlighting structural elements to be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "M.6 Design For Disassembly Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Intended list of permanent building elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Documentation outlining how the intended building elements designed for disassembly can be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "M.7 Life Cycle Assessment (LCA) Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Intended list of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Documentation outlining all applicable materials and the percent of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "IE.1 Thermal Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "PMV Calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "System operations specifications with HVAC equipment schedules and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with specifications for typical occupied spaces")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Architectural drawings including sections and wall sections.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Glazing data sheets from manufacturer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Characteristic length and throw data from drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Diffuser data sheet from the manufacturer.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Calculations of PMV of all typical spaces and undesigned spaces (per tenant type)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "IE.2 Natural Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Documentation showing the number of months that the project can utilize natural ventilation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Operable windows area calculations, and schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing the total area of the each floor.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Occupancy schedule for areas with operable windows.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "IE.3 Mechanical Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation and result of fresh outdoor air delivery by air handling units")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation of minimum required outside air based on ASHRAE 62.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Report showing equipment efficiency compared to ASHRAE 90.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Specifications and drawings showing the location of CO2 sensors")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "HVAC Equipment schedule and HVAC specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "IE.4 Illumination Levels Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Architectural plan showing section and lighting layout of the spaces being measured")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Lighting simulations and results including the location of calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "IE.6 Glare Control Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Simulation boundary condition template")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) DGI simulation result.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Relevant drawings including elevations, plans and site maps with surrounding buildings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Floor plan drawings showing windows fitted with blinds and their size with details of operation of the blinds.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Information of any shading control system and description of operation of the blinds")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Typical Floor Plan showing floor area within 7 meters of the perimeter.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Building Elevations showing window area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Section through typical floor showing potential obstructions that block the view.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Plan to demonstrate the locations of contaminant sources")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Wall sections or other drawings to demonstrate how adjacent spaces are sealed and isolated")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Mechanical drawings showing ductwork paths and air handling layout")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "HVAC specifications and equipment schedules to demonstrate the score of filtration systems")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Doors specifications illustrating self-closing doors are provided for those spaces, Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Tenant Lease Agreement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Energy and Water Sub-metering Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Low voltage schematics and Water schematics showing the number and location of sub meters. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Sub meters system controls schematic and  specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Drawings to demonstrate the location of energy and water monitoring units.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "BMS points schedule identifying sub meters.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Automated Control System Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Automated Control System drawings, schedules and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Drawings that show the location of the system.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Preventive maintenance plan (ensuring that components are tested, repaired, or replaced at the intervals recommended by the manufacturer)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Core___Shell_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Core + Shell", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "UC.4 Private Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Occupancy Calculations (total number of building users).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Architectural drawing showing transportation plan, including alternative transportation strategies/Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Drawings showing the alternative transportation infrastructure including bike racks areas, shower and lockers, plug-in stations with parking spaces.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Site Plan/ Project Plans demonstrating access, storage, and support  for all types of claimed transportation facilities.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "UC. 6 Acoustic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Site Plan showing the distance between the site and major roads or airports in close proximity.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Traffic report demonstrating average daily trips for cars and medium trucks. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Background noise survey report (if applicable).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "UC.7 Proximity to Amenities Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Architectural plan identifying the location and distance of amenities with respect to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "List of all basic amenities within the specified distance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Supporting evidences of the proposed amenities (e.g. photos).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "UC.8 Accessibility Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Site Plan indicating 480 meters zone around the site, also indicating the passible and impassible borders of project by pedestrians (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Future pedestrian networks, bridges or subways; if any.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Architectural plan identifying the site entrances and accessible entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the boundary of the site indicating if the border is passable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the labeled network of existing pedestrian and bicycle pathways extending to 480 m away from site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Occupancy calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Estimation for occupants of adjacent properties within 480 m from site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_88 = Requirement.create!(name: " Commitment Letter indicating that the project commits to demonstrating full compliance with the Descriptive-Based Evaluation requirements of the GSAS Construction Management Site Category, including S.1-Solid Waste Load, S.2-Sewer & Waterway Contamination, S.3-Dust Control, and S4-Noise Pollution")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_88, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Partial"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "S.8 Wind Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Site Plan showing surrounding buildings and site dimensions within the 250 m radius, illustrating building heights")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Summary report of wind boundary conditions (major wind speeds)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Computational Fluid Dynamics (CFD) simulations, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Architectural plan and drawings indicating the area measured in CFD simulations, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Post-development simulation wind speed plots and average wind speed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "S.9 Noise Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Site Plan of existing buildings within 500 m of the project site edge")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specifications of surrounding building types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Plan showing location of outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specification and Manufacturers sound data for outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Report for hourly sound pressure level measurements at the 4 test positions on an operational day")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "S.10 Light Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Relevant external lighting drawings (Site plan, plans and elevations)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Simulation result for pre and post curfew light trespass, vertical illumination levels and Upward light emission simulation result")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_90 = Requirement.create!(name: " Commitment letter from the owner indicating targeted  score level  in the GSAS Construction Management Certification Type (Classes A, B or C).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_90, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Full"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "M.5 Structure Reuse On-Site Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Itemized list and area of reused structural elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Description of how the elements will be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Plans and elevations highlighting structural elements to be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "M.6 Design For Disassembly Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Intended list of permanent building elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Documentation outlining how the intended building elements designed for disassembly can be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "M.7 Life Cycle Assessment (LCA) Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Intended list of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Documentation outlining all applicable materials and the percent of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "IE.1 Thermal Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "PMV Calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "System operations specifications with HVAC equipment schedules and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with specifications for typical occupied spaces")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Architectural drawings including sections and wall sections.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Glazing data sheets from manufacturer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Characteristic length and throw data from drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Diffuser data sheet from the manufacturer.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Supporting documents for thermal comfort in special functional spaces (auditorium)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "IE.2 Natural Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Documentation showing the number of months that the project can utilize natural ventilation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Operable windows area calculations, and schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing the total area of the each floor.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Occupancy schedule for areas with operable windows.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "IE.3 Mechanical Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation and result of fresh outdoor air delivery by air handling units")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation of minimum required outside air based on ASHRAE 62.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Report showing equipment efficiency compared to ASHRAE 90.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Specifications and drawings showing the location of CO2 sensors")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "HVAC Equipment schedule and HVAC specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "IE.4 Illumination Levels Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Architectural plan showing section and lighting layout of the spaces being measured")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Lighting simulations and results including the location of calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "IE.6 Glare Control Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Simulation boundary condition template")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) DGI simulation result.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Relevant drawings including elevations, plans and site maps with surrounding buildings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Floor plan drawings showing windows fitted with blinds and their size with details of operation of the blinds.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Information of any shading control system and description of operation of the blinds")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Typical Floor Plan showing floor area within 7 meters of the perimeter.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Building Elevations showing window area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Section through typical floor showing potential obstructions that block the view.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Plan to demonstrate the locations of contaminant sources")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Wall sections or other drawings to demonstrate how adjacent spaces are sealed and isolated")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Mechanical drawings showing ductwork paths and air handling layout")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "HVAC specifications and equipment schedules to demonstrate the score of filtration systems")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Doors specifications illustrating self-closing doors are provided for those spaces, Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Energy and Water Sub-metering Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Low voltage schematics and Water schematics showing the number and location of sub meters. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Sub meters system controls schematic and  specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Drawings to demonstrate the location of energy and water monitoring units.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "BMS points schedule identifying sub meters.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Automated Control System Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Automated Control System drawings, schedules and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Drawings that show the location of the system.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Preventive maintenance plan (ensuring that components are tested, repaired, or replaced at the intervals recommended by the manufacturer)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Education_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Education", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "UC.4 Private Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Occupancy Calculations (total number of building users).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Architectural drawing showing transportation plan, including alternative transportation strategies/Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Drawings showing the alternative transportation infrastructure including bike racks areas, shower and lockers, plug-in stations with parking spaces.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Site Plan/ Project Plans demonstrating access, storage, and support  for all types of claimed transportation facilities.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "UC. 6 Acoustic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Site Plan showing the distance between the site and major roads or airports in close proximity.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Traffic report demonstrating average daily trips for cars and medium trucks. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Background noise survey report (if applicable).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "UC.7 Proximity to Amenities Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Architectural plan identifying the location and distance of amenities with respect to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "List of all basic amenities within the specified distance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Supporting evidences of the proposed amenities (e.g. photos).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "UC.8 Accessibility Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Site Plan indicating 480 meters zone around the site, also indicating the passible and impassible borders of project by pedestrians (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Future pedestrian networks, bridges or subways; if any.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Architectural plan identifying the site entrances and accessible entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the boundary of the site indicating if the border is passable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the labeled network of existing pedestrian and bicycle pathways extending to 480 m away from site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Occupancy calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Estimation for occupants of adjacent properties within 480 m from site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_88 = Requirement.create!(name: " Commitment Letter indicating that the project commits to demonstrating full compliance with the Descriptive-Based Evaluation requirements of the GSAS Construction Management Site Category, including S.1-Solid Waste Load, S.2-Sewer & Waterway Contamination, S.3-Dust Control, and S4-Noise Pollution")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_88, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Partial"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "S.8 Wind Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Site Plan showing surrounding buildings and site dimensions within the 250 m radius, illustrating building heights")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Summary report of wind boundary conditions (major wind speeds)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Computational Fluid Dynamics (CFD) simulations, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Architectural plan and drawings indicating the area measured in CFD simulations, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Post-development simulation wind speed plots and average wind speed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "S.9 Noise Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Site Plan of existing buildings within 500 m of the project site edge")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specifications of surrounding building types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Plan showing location of outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specification and Manufacturers sound data for outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Report for hourly sound pressure level measurements at the 4 test positions on an operational day")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "S.10 Light Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Relevant external lighting drawings (Site plan, plans and elevations)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Simulation result for pre and post curfew light trespass, vertical illumination levels and Upward light emission simulation result")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_90 = Requirement.create!(name: " Commitment letter from the owner indicating targeted  score level  in the GSAS Construction Management Certification Type (Classes A, B or C).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_90, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Full"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Details of the access arrangement for wheel chairs, trolleys and beds both internally and externally to the building.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_100 = Requirement.create!(name: "Legionella Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_100, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Prevention Against Legionella"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_100 = Requirement.create!(name: "Design drawings showing the measures taken to minimize the risk of Legionella.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_100, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Prevention Against Legionella"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_100 = Requirement.create!(name: "Specification of water treatment systems.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Water_CRITERION_100, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Prevention Against Legionella"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_101 = Requirement.create!(name: "M.5 Structure Reuse On-Site Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_101, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse On-site"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_101 = Requirement.create!(name: "Itemized list and area of reused structural elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_101, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse On-site"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_101 = Requirement.create!(name: "Description of how the elements will be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_101, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse On-site"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_101 = Requirement.create!(name: "Plans and elevations highlighting structural elements to be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_101, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse On-site"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_101 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_101, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse On-site"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "M.6 Design For Disassembly Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Intended list of permanent building elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Documentation outlining how the intended building elements designed for disassembly can be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "M.7 Life Cycle Assessment (LCA) Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Intended list of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Documentation outlining all applicable materials and the percent of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "IE.1 Thermal Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "PMV Calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "System operations specifications with HVAC equipment schedules and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with specifications for typical occupied spaces")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Architectural drawings including sections and wall sections.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Glazing data sheets from manufacturer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Characteristic length and throw data from drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Diffuser data sheet from the manufacturer.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Full thermal model analysis")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "IE.3 Mechanical Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation and result of fresh outdoor air delivery by air handling units")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation of minimum required outside air based on ASHRAE 62.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Report showing equipment efficiency compared to ASHRAE 90.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Specifications and drawings showing the location of CO2 sensors")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "HVAC Equipment schedule and HVAC specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "IE.4 Illumination Levels Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Architectural plan showing section and lighting layout of the spaces being measured")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Lighting simulations and results including the location of calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "IE.7 Views Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Typical Floor Plan showing floor area within 7 meters of the perimeter.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Building Elevations showing window area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42 = Requirement.create!(name: "Section through typical floor showing potential obstructions that block the view.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_42, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Views"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Plan to demonstrate the locations of contaminant sources")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Wall sections or other drawings to demonstrate how adjacent spaces are sealed and isolated")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Mechanical drawings showing ductwork paths and air handling layout")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "HVAC specifications and equipment schedules to demonstrate the score of filtration systems")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Doors specifications illustrating self-closing doors are provided for those spaces, Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Energy and Water Sub-metering Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Low voltage schematics and Water schematics showing the number and location of sub meters. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Sub meters system controls schematic and  specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Drawings to demonstrate the location of energy and water monitoring units.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "BMS points schedule identifying sub meters.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Automated Control System Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Automated Control System drawings, schedules and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Drawings that show the location of the system.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Preventive maintenance plan (ensuring that components are tested, repaired, or replaced at the intervals recommended by the manufacturer)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_73 = Requirement.create!(name: "Sustainability Education & Awareness Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_73, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sustainability Education & Awareness Plan"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_73 = Requirement.create!(name: "Any supporting documentation (e.g. Print materials, digital materials, displays and signage's) that demonstrates compliance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_73, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sustainability Education & Awareness Plan"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_70 = Requirement.create!(name: "Vertical Transportation Plan which performs analysis of the transport demand with respect to the quantity and size of lifts, escalators and walkways")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Healthcare_false_CATEGORY_Management___Operations_CRITERION_70, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Healthcare", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vertical Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "UC.4 Private Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Occupancy Calculations (total number of building users).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Architectural drawing showing transportation plan, including alternative transportation strategies/Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Drawings showing the alternative transportation infrastructure including bike racks areas, shower and lockers, plug-in stations with parking spaces.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Site Plan/ Project Plans demonstrating access, storage, and support  for all types of claimed transportation facilities.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "UC. 6 Acoustic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Site Plan showing the distance between the site and major roads or airports in close proximity.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Traffic report demonstrating average daily trips for cars and medium trucks. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Background noise survey report (if applicable).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "UC.7 Proximity to Amenities Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Architectural plan identifying the location and distance of amenities with respect to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "List of all basic amenities within the specified distance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Supporting evidences of the proposed amenities (e.g. photos).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_88 = Requirement.create!(name: " Commitment Letter indicating that the project commits to demonstrating full compliance with the Descriptive-Based Evaluation requirements of the GSAS Construction Management Site Category, including S.1-Solid Waste Load, S.2-Sewer & Waterway Contamination, S.3-Dust Control, and S4-Noise Pollution")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_88, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Partial"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "S.8 Wind Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Site Plan showing surrounding buildings and site dimensions within the 250 m radius, illustrating building heights")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Summary report of wind boundary conditions (major wind speeds)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Computational Fluid Dynamics (CFD) simulations, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Architectural plan and drawings indicating the area measured in CFD simulations, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Post-development simulation wind speed plots and average wind speed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "S.9 Noise Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Site Plan of existing buildings within 500 m of the project site edge")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specifications of surrounding building types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Plan showing location of outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specification and Manufacturers sound data for outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Report for hourly sound pressure level measurements at the 4 test positions on an operational day")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "S.10 Light Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Relevant external lighting drawings (Site plan, plans and elevations)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Simulation result for pre and post curfew light trespass, vertical illumination levels and Upward light emission simulation result")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_90 = Requirement.create!(name: " Commitment letter from the owner indicating targeted  score level  in the GSAS Construction Management Certification Type (Classes A, B or C).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_90, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Full"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining picnic areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Simulation results, if performed, demonstrating the picnic areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "M.5 Structure Reuse On-Site Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Itemized list and area of reused structural elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Description of how the elements will be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Plans and elevations highlighting structural elements to be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "M.6 Design For Disassembly Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Intended list of permanent building elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Documentation outlining how the intended building elements designed for disassembly can be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "M.7 Life Cycle Assessment (LCA) Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Intended list of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Documentation outlining all applicable materials and the percent of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "IE.1 Thermal Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "PMV Calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "System operations specifications with HVAC equipment schedules and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with specifications for typical occupied spaces")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Architectural drawings including sections and wall sections.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Glazing data sheets from manufacturer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Characteristic length and throw data from drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Diffuser data sheet from the manufacturer.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Supporting documents that demonstrates that all guestrooms have individual thermostats")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "IE.2 Natural Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Documentation showing the number of months that the project can utilize natural ventilation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Operable windows area calculations, and schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing the total area of the each floor.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Occupancy schedule for areas with operable windows.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "IE.3 Mechanical Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation and result of fresh outdoor air delivery by air handling units")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation of minimum required outside air based on ASHRAE 62.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Report showing equipment efficiency compared to ASHRAE 90.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Specifications and drawings showing the location of CO2 sensors")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "HVAC Equipment schedule and HVAC specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "IE.4 Illumination Levels Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Architectural plan showing section and lighting layout of the spaces being measured")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Lighting simulations and results including the location of calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Plan to demonstrate the locations of contaminant sources")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Wall sections or other drawings to demonstrate how adjacent spaces are sealed and isolated")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Mechanical drawings showing ductwork paths and air handling layout")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "HVAC specifications and equipment schedules to demonstrate the score of filtration systems")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Doors specifications illustrating self-closing doors are provided for those spaces, Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Energy and Water Sub-metering Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Low voltage schematics and Water schematics showing the number and location of sub meters. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Sub meters system controls schematic and  specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Drawings to demonstrate the location of energy and water monitoring units.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "BMS points schedule identifying sub meters.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Automated Control System Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Automated Control System drawings, schedules and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Drawings that show the location of the system.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Preventive maintenance plan (ensuring that components are tested, repaired, or replaced at the intervals recommended by the manufacturer)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Hotels_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Hotels", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "UC.4 Private Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Occupancy Calculations (total number of building users).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Architectural drawing showing transportation plan, including alternative transportation strategies/Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Drawings showing the alternative transportation infrastructure including bike racks areas, shower and lockers, plug-in stations with parking spaces.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Site Plan/ Project Plans demonstrating access, storage, and support  for all types of claimed transportation facilities.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "UC.7 Proximity to Amenities Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Architectural plan identifying the location and distance of amenities with respect to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "List of all basic amenities within the specified distance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Supporting evidences of the proposed amenities (e.g. photos).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_88 = Requirement.create!(name: " Commitment Letter indicating that the project commits to demonstrating full compliance with the Descriptive-Based Evaluation requirements of the GSAS Construction Management Site Category, including S.1-Solid Waste Load, S.2-Sewer & Waterway Contamination, S.3-Dust Control, and S4-Noise Pollution")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_88, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Partial"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "S.8 Wind Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Site Plan showing surrounding buildings and site dimensions within the 250 m radius, illustrating building heights")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Summary report of wind boundary conditions (major wind speeds)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Computational Fluid Dynamics (CFD) simulations, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Architectural plan and drawings indicating the area measured in CFD simulations, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Post-development simulation wind speed plots and average wind speed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "S.9 Noise Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Site Plan of existing buildings within 500 m of the project site edge")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specifications of surrounding building types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Plan showing location of outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specification and Manufacturers sound data for outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Report for hourly sound pressure level measurements at the 4 test positions on an operational day")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "S.10 Light Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Relevant external lighting drawings (Site plan, plans and elevations)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Simulation result for pre and post curfew light trespass, vertical illumination levels and Upward light emission simulation result")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_90 = Requirement.create!(name: " Commitment letter from the owner indicating targeted  score level  in the GSAS Construction Management Certification Type (Classes A, B or C).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_90, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Full"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "M.5 Structure Reuse On-Site Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Itemized list and area of reused structural elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Description of how the elements will be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Plans and elevations highlighting structural elements to be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "M.6 Design For Disassembly Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Intended list of permanent building elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Documentation outlining how the intended building elements designed for disassembly can be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "M.7 Life Cycle Assessment (LCA) Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Intended list of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Documentation outlining all applicable materials and the percent of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "IE.1 Thermal Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "PMV Calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "System operations specifications with HVAC equipment schedules and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with specifications for typical occupied spaces")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Architectural drawings including sections and wall sections.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Glazing data sheets from manufacturer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Characteristic length and throw data from drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Diffuser data sheet from the manufacturer.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "IE.2 Natural Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Documentation showing the number of months that the project can utilize natural ventilation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air, excluding areas associated with industrial processes")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Operable windows area calculations, and schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing the total area of the each floor.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Occupancy schedule for areas with operable windows.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "IE.3 Mechanical Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation and result of fresh outdoor air delivery by air handling units")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation of minimum required outside air based on ASHRAE 62.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Report showing equipment efficiency compared to ASHRAE 90.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Specifications and drawings showing the location of CO2 sensors")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "HVAC Equipment schedule and HVAC specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "IE.4 Illumination Levels Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Architectural plan showing section and lighting layout of the spaces being measured")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Lighting simulations and results including the location of calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "IE.6 Glare Control Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Simulation boundary condition template")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) DGI simulation result.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option A) Relevant drawings including elevations, plans and site maps with surrounding buildings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Floor plan drawings showing windows fitted with blinds and their size with details of operation of the blinds.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41 = Requirement.create!(name: "Option B) Information of any shading control system and description of operation of the blinds")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_41, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Glare Control"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Plan to demonstrate the locations of contaminant sources")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Wall sections or other drawings to demonstrate how adjacent spaces are sealed and isolated")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Mechanical drawings showing ductwork paths and air handling layout")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "HVAC specifications and equipment schedules to demonstrate the score of filtration systems")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Doors specifications illustrating self-closing doors are provided for those spaces, Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Energy and Water Sub-metering Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Low voltage schematics and Water schematics showing the number and location of sub meters. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Sub meters system controls schematic and  specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Drawings to demonstrate the location of energy and water monitoring units.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "BMS points schedule identifying sub meters.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Automated Control System Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Automated Control System drawings, schedules and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Drawings that show the location of the system.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Preventive maintenance plan (ensuring that components are tested, repaired, or replaced at the intervals recommended by the manufacturer)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Light_Industry_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Light Industry", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load during peak hours following the Friday midday prayer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "UC.8 Accessibility Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Site Plan indicating 480 meters zone around the site, also indicating the passible and impassible borders of project by pedestrians (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Future pedestrian networks, bridges or subways; if any.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Architectural plan identifying the site entrances and accessible entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the boundary of the site indicating if the border is passable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the labeled network of existing pedestrian and bicycle pathways extending to 480 m away from site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Occupancy calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Estimation for occupants of adjacent properties within 480 m from site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_88 = Requirement.create!(name: " Commitment Letter indicating that the project commits to demonstrating full compliance with the Descriptive-Based Evaluation requirements of the GSAS Construction Management Site Category, including S.1-Solid Waste Load, S.2-Sewer & Waterway Contamination, S.3-Dust Control, and S4-Noise Pollution")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_88, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Partial"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_90 = Requirement.create!(name: " Commitment letter from the owner indicating targeted  score level  in the GSAS Construction Management Certification Type (Classes A, B or C).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_90, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Full"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "M.7 Life Cycle Assessment (LCA) Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Intended list of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Documentation outlining all applicable materials and the percent of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "IE.1 Thermal Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "PMV Calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "System operations specifications with HVAC equipment schedules and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with specifications for typical occupied spaces")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Architectural drawings including sections and wall sections.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Glazing data sheets from manufacturer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Characteristic length and throw data from drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Diffuser data sheet from the manufacturer.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "IE.2 Natural Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Documentation showing the number of months that the project can utilize natural ventilation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Operable windows area calculations, and schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing the total area of the each floor.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Occupancy schedule for areas with operable windows.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "IE.3 Mechanical Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation and result of fresh outdoor air delivery by air handling units")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation of minimum required outside air based on ASHRAE 62.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Report showing equipment efficiency compared to ASHRAE 90.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Specifications and drawings showing the location of CO2 sensors")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "HVAC Equipment schedule and HVAC specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "IE.4 Illumination Levels Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Architectural plan showing section and lighting layout of the spaces being measured")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Lighting simulations and results including the location of calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Energy and Water Sub-metering Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Low voltage schematics and Water schematics showing the number and location of sub meters. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Sub meters system controls schematic and  specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Drawings to demonstrate the location of energy and water monitoring units.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "BMS points schedule identifying sub meters.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Mosques_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Mosques", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "UC.7 Proximity to Amenities Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Architectural plan identifying the location and distance of amenities with respect to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "List of all basic amenities within the specified distance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Supporting evidences of the proposed amenities (e.g. photos).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "UC.8 Accessibility Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Site Plan indicating 480 meters zone around the site, also indicating the passible and impassible borders of project by pedestrians (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Future pedestrian networks, bridges or subways; if any.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Architectural plan identifying the site entrances and accessible entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the boundary of the site indicating if the border is passable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the labeled network of existing pedestrian and bicycle pathways extending to 480 m away from site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Occupancy calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Estimation for occupants of adjacent properties within 480 m from site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_88 = Requirement.create!(name: " Commitment Letter indicating that the project commits to demonstrating full compliance with the Descriptive-Based Evaluation requirements of the GSAS Construction Management Site Category, including S.1-Solid Waste Load, S.2-Sewer & Waterway Contamination, S.3-Dust Control, and S4-Noise Pollution")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_88, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Partial"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Station flood risk management plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "S.8 Wind Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Site Plan showing surrounding buildings and site dimensions within the 250 m radius, illustrating building heights")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Summary report of wind boundary conditions (major wind speeds)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Computational Fluid Dynamics (CFD) simulations, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Architectural plan and drawings indicating the area measured in CFD simulations, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Post-development simulation wind speed plots and average wind speed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "S.9 Noise Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Site Plan of existing buildings within 500 m of the project site edge")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specifications of surrounding building types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Plan showing location of outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specification and Manufacturers sound data for outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Report for hourly sound pressure level measurements at the 4 test positions on an operational day")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "S.10 Light Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Relevant external lighting drawings (Site plan, plans and elevations)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Simulation result for pre and post curfew light trespass, vertical illumination levels and Upward light emission simulation result")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_90 = Requirement.create!(name: " Commitment letter from the owner indicating targeted  score level  in the GSAS Construction Management Certification Type (Classes A, B or C).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_90, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Full"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining shaded platform and concourse areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_101 = Requirement.create!(name: "M.5 Structure Reuse On-Site Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_101, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse On-site"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_101 = Requirement.create!(name: "Itemized list and area of reused structural elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_101, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse On-site"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_101 = Requirement.create!(name: "Description of how the elements will be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_101, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse On-site"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_101 = Requirement.create!(name: "Plans and elevations highlighting structural elements to be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_101, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse On-site"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_101 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_101, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse On-site"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "M.6 Design For Disassembly Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Intended list of permanent building elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Documentation outlining how the intended building elements designed for disassembly can be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "M.7 Life Cycle Assessment (LCA) Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Intended list of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Documentation outlining all applicable materials and the percent of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "IE.1 Thermal Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "PMV Calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "System operations specifications with HVAC equipment schedules and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with specifications for typical occupied spaces")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Architectural drawings including sections and wall sections.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Glazing data sheets from manufacturer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Characteristic length and throw data from drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Diffuser data sheet from the manufacturer.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Full thermal model analysis")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "IE.3 Mechanical Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation and result of fresh outdoor air delivery by air handling units")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation of minimum required outside air based on ASHRAE 62.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Report showing equipment efficiency compared to ASHRAE 90.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Specifications and drawings showing the location of CO2 sensors")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "HVAC Equipment schedule and HVAC specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "IE.4 Illumination Levels Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Architectural plan showing section and lighting layout of the spaces being measured")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Lighting simulations and results including the location of calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Plan to demonstrate the locations of contaminant sources")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Wall sections or other drawings to demonstrate how adjacent spaces are sealed and isolated")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Mechanical drawings showing ductwork paths and air handling layout")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "HVAC specifications and equipment schedules to demonstrate the score of filtration systems")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Doors specifications illustrating self-closing doors are provided for those spaces, Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Energy and Water Sub-metering Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Low voltage schematics and Water schematics showing the number and location of sub meters. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Sub meters system controls schematic and  specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Drawings to demonstrate the location of energy and water monitoring units.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "BMS points schedule identifying sub meters.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Automated Control System Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Automated Control System drawings, schedules and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Drawings that show the location of the system.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Preventive maintenance plan (ensuring that components are tested, repaired, or replaced at the intervals recommended by the manufacturer)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_73 = Requirement.create!(name: "Sustainability Education & Awareness Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_73, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sustainability Education & Awareness Plan"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_73 = Requirement.create!(name: "Any supporting documentation (e.g. Print materials, digital materials, displays and signage's) that demonstrates compliance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_73, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sustainability Education & Awareness Plan"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_70 = Requirement.create!(name: "Vertical Transportation Plan which performs analysis of the transport demand with respect to the quantity and size of lifts, escalators and walkways")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Railways_false_CATEGORY_Management___Operations_CRITERION_70, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Railways", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vertical Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "UC. 6 Acoustic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Site Plan showing the distance between the site and major roads or airports in close proximity.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Traffic report demonstrating average daily trips for cars and medium trucks. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_5 = Requirement.create!(name: "Background noise survey report (if applicable).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_5, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Conditions"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "UC.7 Proximity to Amenities Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Architectural plan identifying the location and distance of amenities with respect to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "List of all basic amenities within the specified distance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Supporting evidences of the proposed amenities (e.g. photos).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_88 = Requirement.create!(name: " Commitment Letter indicating that the project commits to demonstrating full compliance with the Descriptive-Based Evaluation requirements of the GSAS Construction Management Site Category, including S.1-Solid Waste Load, S.2-Sewer & Waterway Contamination, S.3-Dust Control, and S4-Noise Pollution")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_88, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Partial"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "S.8 Wind Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Site Plan showing surrounding buildings and site dimensions within the 250 m radius, illustrating building heights")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Summary report of wind boundary conditions (major wind speeds)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Computational Fluid Dynamics (CFD) simulations, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Architectural plan and drawings indicating the area measured in CFD simulations, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Post-development simulation wind speed plots and average wind speed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_90 = Requirement.create!(name: " Commitment letter from the owner indicating targeted  score level  in the GSAS Construction Management Certification Type (Classes A, B or C).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_90, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Full"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "M.7 Life Cycle Assessment (LCA) Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Intended list of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Documentation outlining all applicable materials and the percent of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "IE.2 Natural Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Documentation showing the number of months that the project can utilize natural ventilation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Operable windows area calculations, and schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing the total area of the each floor.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Occupancy schedule for areas with operable windows.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Group_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Residential - Group", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "UC.7 Proximity to Amenities Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Architectural plan identifying the location and distance of amenities with respect to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "List of all basic amenities within the specified distance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Supporting evidences of the proposed amenities (e.g. photos).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_94 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Energy_CRITERION_94, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx & Particulate Matter"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "M.7 Life Cycle Assessment (LCA) Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Intended list of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Documentation outlining all applicable materials and the percent of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Residential___Single_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Residential - Single", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Simulation results for Commuter Wait Time and sport facility Exit Time. Showing the increase in peak commuter trip time on all roads within a 5 km radius of the sport facility.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "UC.4 Private Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Occupancy Calculations (total number of building users).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Architectural drawing showing transportation plan, including alternative transportation strategies/Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Drawings showing the alternative transportation infrastructure including bike racks areas, shower and lockers, plug-in stations with parking spaces.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3 = Requirement.create!(name: "Site Plan/ Project Plans demonstrating access, storage, and support  for all types of claimed transportation facilities.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_3, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Private Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "UC.8 Accessibility Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Site Plan indicating 480 meters zone around the site, also indicating the passible and impassible borders of project by pedestrians (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Future pedestrian networks, bridges or subways; if any.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Architectural plan identifying the site entrances and accessible entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the boundary of the site indicating if the border is passable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Drawings showing the labeled network of existing pedestrian and bicycle pathways extending to 480 m away from site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Occupancy calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7 = Requirement.create!(name: "Estimation for occupants of adjacent properties within 480 m from site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Urban_Connectivity_CRITERION_7, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Accessibility"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_88 = Requirement.create!(name: " Commitment Letter indicating that the project commits to demonstrating full compliance with the Descriptive-Based Evaluation requirements of the GSAS Construction Management Site Category, including S.1-Solid Waste Load, S.2-Sewer & Waterway Contamination, S.3-Dust Control, and S4-Noise Pollution")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_88, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Partial"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "S.8 Wind Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Site Plan showing surrounding buildings and site dimensions within the 250 m radius, illustrating building heights")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Summary report of wind boundary conditions (major wind speeds)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Computational Fluid Dynamics (CFD) simulations, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Architectural plan and drawings indicating the area measured in CFD simulations, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_89 = Requirement.create!(name: "Post-development simulation wind speed plots and average wind speed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_89, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Wind Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "S.9 Noise Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Site Plan of existing buildings within 500 m of the project site edge")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specifications of surrounding building types")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Plan showing location of outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Specification and Manufacturers sound data for outdoor HVAC equipment")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16 = Requirement.create!(name: "Report for hourly sound pressure level measurements at the 4 test positions on an operational day")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_16, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Noise Pollution"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "S.10 Light Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Relevant external lighting drawings (Site plan, plans and elevations)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Simulation result for pre and post curfew light trespass, vertical illumination levels and Upward light emission simulation result")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_90 = Requirement.create!(name: " Commitment letter from the owner indicating targeted  score level  in the GSAS Construction Management Certification Type (Classes A, B or C).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_90, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "GSAS Construction Management - Full"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining picnic areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Simulation results, if performed, demonstrating the picnic areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_92 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_92, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Primary Energy Sources"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_95, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Efficiency"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "W.2 Water Consumption and Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Rainwater collection and reuse plan (Rainwater-Storm water)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Water recycling plan (Greywater-Blackwater treatment)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Cooling Tower Specifications and Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "HVAC System specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_96 = Requirement.create!(name: "Condensate water collection plan and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Water_CRITERION_96, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption and Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_101 = Requirement.create!(name: "M.5 Structure Reuse On-Site Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_101, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse On-site"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_101 = Requirement.create!(name: "Itemized list and area of reused structural elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_101, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse On-site"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_101 = Requirement.create!(name: "Description of how the elements will be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_101, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse On-site"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_101 = Requirement.create!(name: "Plans and elevations highlighting structural elements to be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_101, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse On-site"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_101 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_101, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse On-site"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "M.6 Design For Disassembly Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Intended list of permanent building elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Documentation outlining how the intended building elements designed for disassembly can be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_97 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_97, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design For Disassembly"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "M.7 Life Cycle Assessment (LCA) Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Intended list of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Documentation outlining all applicable materials and the percent of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "IE.1 Thermal Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "PMV Calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "System operations specifications with HVAC equipment schedules and specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with specifications for typical occupied spaces")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Architectural drawings including sections and wall sections.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Glazing data sheets from manufacturer")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Characteristic length and throw data from drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Diffuser data sheet from the manufacturer.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Building plans with identification of critical seats.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36 = Requirement.create!(name: "Sun exposure study.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_36, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Thermal Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "IE.3 Mechanical Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation and result of fresh outdoor air delivery by air handling units")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Calculation of minimum required outside air based on ASHRAE 62.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Report showing equipment efficiency compared to ASHRAE 90.1")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "Specifications and drawings showing the location of CO2 sensors")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_38 = Requirement.create!(name: "HVAC Equipment schedule and HVAC specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_38, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Mechanical Ventilation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "IE.4 Illumination Levels Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Architectural plan showing section and lighting layout of the spaces being measured")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Lighting simulations and results including the location of calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39 = Requirement.create!(name: "Average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_39, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Illumination Levels"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Plan to demonstrate the locations of contaminant sources")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Wall sections or other drawings to demonstrate how adjacent spaces are sealed and isolated")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Mechanical drawings showing ductwork paths and air handling layout")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "HVAC specifications and equipment schedules to demonstrate the score of filtration systems")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Doors specifications illustrating self-closing doors are provided for those spaces, Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45 = Requirement.create!(name: "Floor plans showing permanent entryway system provided at main entrances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Indoor_Environment_CRITERION_45, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Indoor Chemical & Pollutant Source Control"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_99 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_99, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water and Refrigerant Leak Detection Systems"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Energy and Water Sub-metering Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Low voltage schematics and Water schematics showing the number and location of sub meters. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Sub meters system controls schematic and  specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Drawings to demonstrate the location of energy and water monitoring units.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "BMS points schedule identifying sub meters.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Automated Control System Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Automated Control System drawings, schedules and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Drawings that show the location of the system.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_84 = Requirement.create!(name: "Preventive maintenance plan (ensuring that components are tested, repaired, or replaced at the intervals recommended by the manufacturer)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_84, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Automated Control Systems"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_73 = Requirement.create!(name: "Sustainability Education & Awareness Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_73, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sustainability Education & Awareness Plan"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_73 = Requirement.create!(name: "Any supporting documentation (e.g. Print materials, digital materials, displays and signage's) that demonstrates compliance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Sports_false_CATEGORY_Management___Operations_CRITERION_73, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Sports", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sustainability Education & Awareness Plan"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "UC.1 Proximity to Infrastructure Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Site Plan showing infrastructure Available Connections within 1 km.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Specifications of Available and Required Infrastructure")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "On-site Infrastructure Drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Letter signed/stamped by Authorities, municipalities, if any, that provide services.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Supporting documents showing that the infrastructure has the required capacity(Letter, drawings, specifications, etc.)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Project load calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_0 = Requirement.create!(name: "Planned infrastructure drawings, if claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_0, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Infrastructure"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "UC.2 Load on Local Traffic Conditions Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Site plan showing building layout and adjacent road network and analysis for existing traffic conditions highlighting major roundabouts-intersections that will be taken into consideration.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Calculations of estimated added traffic load due to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Traffic Study Report indicating existing traffic flow directions and volumes and strategies to mitigate the impact on traffic conditions.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_1 = Requirement.create!(name: "Simulation results for Commuter Wait Time and sport facility Exit Time. Showing the increase in peak commuter trip time on all roads within a 5 km radius of the sport facility.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_1, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Load on Local Traffic Conditions"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "UC.3 Public Transportation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Site map identifying all existing and planned public transportation stops within 240 m, 320 m, 400 m and 480 m")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_2 = Requirement.create!(name: "Transportation plan (strategy) that demonstrates how shuttle services are offered to the building occupants if shuttle service is claimed.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_2, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Public Transportation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sewer & Waterway Contamination Plan (strategy) which demonstrate how solid or harmful substances will be collected, stored, and removed from the site.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water drainage system specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Sanitary drainage system drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_4 = Requirement.create!(name: "Storm water and sanitary tank and filtration system drawings; outlining methods of filtration, separation, or treatment before exiting the site .")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_4, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sewer & Waterway Contamination"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "UC.7 Proximity to Amenities Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Architectural plan identifying the location and distance of amenities with respect to the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "List of all basic amenities within the specified distance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_6 = Requirement.create!(name: "Supporting evidences of the proposed amenities (e.g. photos).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Urban_Connectivity_CRITERION_6, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Urban Connectivity", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Proximity to Amenities"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "S.1 Land Preservation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Assessment Report duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Erosion Plan, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site Plan identifying areas of varying degrees of soil quality, soil disturbance and contaminated land for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Site plan identifying areas to be conserved, restored or enhanced")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Specifications that illustrate how site remediation, conservation, and restoration outlined in the Site Assessment Report will be implemented.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Geotechnical Investigation Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_8 = Requirement.create!(name: "Soil Quality Report including parameters for metals and hydrocarbon (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_8, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Land Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Body Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Diagrams and drawings identifying the location of natural water bodies for pre and post development")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Drawings indicating at least 200 m buffer around coastal areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Permit")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Impact Assessment Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Water Quality Monitoring Report (baseline and latest)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Dewatering Permit, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_9 = Requirement.create!(name: "Environmental Monitoring Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_9, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Body Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Habitat Preservation Plan duly prepared by a Land/Environment Specialist or Ecologist")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Terrestrial Ecological Survey Report")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Diagrams or drawings that identify all habitats (Flora and Fauna), pre and post-development.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_10 = Requirement.create!(name: "Evidences demonstrating unavailability of vegetation or endangered habitat, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_10, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Habitat Preservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Site Plan and softscape plan (in a measurable format)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Softscape material data sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_11 = Requirement.create!(name: "Planting schedule (quantity and ground coverage)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_11, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Vegetation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Rainwater Management Plan (strategy).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Softscape and Hardscape plans and datasheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water drainage system specifications, where applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Sanitary drainage system drawing and specifications showing how rainwater will be collected from building(s) and the whole site-landscape. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storage tank specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Storm water treatment and reuse plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Municipal storm water network, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Site plan.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_13 = Requirement.create!(name: "Plans/ drawings demonstrating how the excess water, not absorbed by landscaping, is captured and reused.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_13, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Rainwater Runoff"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "S.7 Heat Island Effect Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Site Plan including neighboring buildings within 200-m radius illustrating required coordinates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Roof floor plan illustrating coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Construction material specifications for the building exterior and site surface finish")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Building Elevations and sections illustrating heights of the project and surrounding buildings, drawing showing the buildings coordinates.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Materials data sheets showing reflectance index")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Simulation results for irregular shaped building, if applicable.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_14 = Requirement.create!(name: "Selector indicator calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_14, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heat Island Effect"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "S.10 Light Pollution Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Relevant external lighting drawings (Site plan, plans and elevations)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Simulation result for pre and post curfew light trespass, vertical illumination levels and Upward light emission simulation result")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_17 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_17, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Light Pollution"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "S.12 Parking Footprint Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Authorization letter/ standards calculations demonstrating the minimum number of car parks required by regulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Parking Footprint Plan identifying all surface lots")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_19 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_19, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Parking Footprint"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "S.13 Shading calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Site Plan outlining all building footprints, pedestrian pathways, parking areas and common areas (in a measurable format).")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Landscaping Plan and drawings demonstrating the location of shaded areas identifying method of shading if plants or architectural shading elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Drawings and specifications with planting schedule identifying the type and location of plant species (including the crown height and width of each type of plant)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Material data sheets for landscaping")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Architectural shading features details.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_20 = Requirement.create!(name: "Results of the simulation, if performed, demonstrating the areas of the pedestrian pathways, parking areas and common areas that are shaded.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_20, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Shading"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "S. 14 Visual Comfort Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Site Plan showing all access roads, parking areas, pedestrian pathways and location of light fixtures in relation with these areas")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Lighting simulation results, including relevant calculation surfaces, data of average maintained lux levels and uniformity")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_91 = Requirement.create!(name: "Manufacturer's Datasheets for Lighting including photometric data for individual light fixtures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_91, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Visual Comfort"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Pathways Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Site plan showing dimensions of all accessible pathways, grade elevation at regular intervals, area connected by the pathways and provisions of at least one accessible paved pathway that connects all built spaces, parking areas and other major facilities")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Architectural plan showing the location of signage's")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Construction details and signage details used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_22 = Requirement.create!(name: "Material Data Sheets for all paving systems used")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Site_CRITERION_22, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Site", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Pathways"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Architectural drawings with orientations & Elevations / sections")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "MEP drawings and Equipment schedules.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Total gross floor area calculations with mark-up drawings. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Building Volume calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "Envelope area calculations with mark-up drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_24 = Requirement.create!(name: "U-value calculations for wall & roof according to BS EN ISO 6946 and BS EN ISO 13370")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_24, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Demand Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Glazing data sheet from manufacturer for U-value and Solar transmittance(Shading co-efficient)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Window frame fraction calculations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Shading reduction factors (SRF.1 & SRF.2) from external shading devices and internal devices calculations and supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_25 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_25, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy Delivery Performance"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "HVAC system Ventilation system type according to EN 15239 standards and schematic drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation flow rate calculation according to ASHRAE/EN ISO standards for design and minimum ventilation rates")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Controlled demand ventilation fraction profiles,  Supporting documentation & relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_26 = Requirement.create!(name: "Ventilation / Supply air fan operation fraction profiles, Calculations & supporting documentation.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_26, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Fossil Fuel Conservation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "HVAC system type schematic drawings/equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Ventilation & Supply air  fan operation SFP (specific fan power) calculations and manufacturer data sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Supply air flow rates calculations spreadsheet with relevant HVAC drawings & HVAC equipment schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting power density calculation spreadsheets with relevant electrical lighting drawings and simulations.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Lighting occupancy dependency factor calculation according to EN 15193 and relevant drawings showing the location of automatic sensors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_93 = Requirement.create!(name: "Horizontal work plane area calculations and mark-up drawings according to EN 15193.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_93, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "CO2 Emissions and Offset"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Energy Performance Evaluation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "SEER calculations with supporting documentation and selection sheets from manufacturers.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "DHW system type and location with relevant drawings.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_28 = Requirement.create!(name: "Renewable energy system and relevant drawings and specification sheets.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Energy_CRITERION_28, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Energy", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "NOx, SOx, & Particulate Matter"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "W.1 Water Efficiency Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Architectural Floor Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Site Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Area Statement")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Occupancy Calculations or Report stating occupancy calculations, building operating hours, and floor or site area.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Specifications/ Datasheets for plumbing fixtures.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Landscape plan (in a measurable format). ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_7_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Plan and Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_8_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Irrigation Specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_9_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29 = Requirement.create!(name: "Planting schedule identifying the type and location of plant species")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_10_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Water_CRITERION_29, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Water", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water Consumption"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "M.1 Regional Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing distances")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Weights calculations of the intended materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_30 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_30, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Regional Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "M.2 Responsible Sourcing of Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Documentation outlining the intended manufacturers and sourcing policies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_31 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_31, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Responsible Sourcing of Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "M.3 Recycled Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Documentation outlining all applicable materials.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Materials data sheets highlighting the recycled content.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_32 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_32, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycled Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "M.4 Material Reuse Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "List of intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Documentation outlining the intended reuse of materials from the site or other sites")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_33 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_33, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Materials Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "M.5 Structure Reuse On-Site Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Itemized list and area of reused structural elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Description of how the elements will be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Plans and elevations highlighting structural elements to be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_34 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_34, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Structure Reuse"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "M.6 Design For Disassembly Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Intended list of permanent building elements")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Documentation outlining how the intended building elements designed for disassembly can be reused")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_35 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_35, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Design for Disassembly"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "M.7 Life Cycle Assessment (LCA) Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Intended list of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Documentation outlining all applicable materials and the percent of materials with approved EPD")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_98 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Materials_CRITERION_98, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Materials", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Life Cycle Assessment (LCA)"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "IE.2 Natural Ventilation Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Documentation showing the number of months that the project can utilize natural ventilation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing operable windows or a system controlled direct supply of outside air")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Operable windows area calculations, and schedule.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Drawings showing the total area of the each floor.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_37 = Requirement.create!(name: "Occupancy schedule for areas with operable windows.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_6_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_37, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Natural Ventilation"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Input Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "IE.5 Daylight Scoring Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Documentation showing boundary conditions for daylight simulation")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Plot of the simulation results")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_40 = Requirement.create!(name: "Drawings including elevations, plans and diagrams identifying the measuring point locations")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_40, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Daylight"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "IE.8 Acoustic Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Floor plan and HVAC Drawings")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Building Material specifications")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Noise source sound power levels (e.g. Manufacturer's catalogs)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_43 = Requirement.create!(name: "Elevation drawings clearly showing the room height.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_43, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Acoustic Quality"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "IE.9 Low-Emitting Materials Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Material Safety Data Sheets")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Documentation listing the VOC Content for all indoor materials and finishes, if applicable")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_44 = Requirement.create!(name: "Commitment letter if final information is missing")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Indoor_Environment_CRITERION_44, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Indoor Environment", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Low-Emitting Materials"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept brief outlining design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Supporting design drawings or renderings to demonstrate design strategies")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Cultural___Economic_Value_CRITERION_46 = Requirement.create!(name: "Concept design report showing architectural interpretation of the different building elements.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Cultural___Economic_Value_CRITERION_46, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Heritage & Cultural Identity"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "CE.2 Support of National Economy Calculator")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended contractual setup for construction expenditures")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Inventory of all intended materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Documentation outlining the intended estimate of construction expenditures with associated costs")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Cultural___Economic_Value_CRITERION_47 = Requirement.create!(name: "Commitment letter if final information is missing.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Cultural___Economic_Value_CRITERION_47, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Cultural & Economic Value", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Support of National Economy"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commissioning Plan (strategy)")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Owners project requirements and design intent")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that identify essential elements of the commissioning plan that have been met.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Documents that outline steps necessary for continued building commissioning during the construction and operations phases. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_48 = Requirement.create!(name: "Commitment Letter")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_48, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Commissioning Plan"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Organic Waste Management Plan (strategy), outlining the collection procedure for organic waste in the project")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and composting of organic waste on or off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_49 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_49, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Organic Waste Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Recycling Management Plan (strategy), outlining the collection, storing and handling procedure for recyclable materials on and off-site")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Drawings demonstrating the collection, points and road, storage and removal of recyclable materials")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "HVAC drawings showing dedicated exhaust system for this area and illustrating how the central sorting and storage area will be properly isolated and ventilated. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_50 = Requirement.create!(name: "Waste calculations ensuring that central storage area provided is sufficient for the generated waste.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_50, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Recycling Management"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_102 = Requirement.create!(name: "Leak Detection Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_102, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water & Refrigerant Leak Detection Systems"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_102 = Requirement.create!(name: "Water schematics and Refrigerant pipework distribution schematics/layouts showing the number and location of leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_102, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water & Refrigerant Leak Detection Systems"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_102 = Requirement.create!(name: "Leak detection system controls schematic and specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_102, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water & Refrigerant Leak Detection Systems"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_102 = Requirement.create!(name: "BMS points schedule identifying leak detectors.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_102, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Water & Refrigerant Leak Detection Systems"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Energy and Water Sub-metering Plans")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Low voltage schematics and Water schematics showing the number and location of sub meters. ")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Sub meters system controls schematic and  specifications.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_3_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "Drawings to demonstrate the location of energy and water monitoring units.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_4_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_52 = Requirement.create!(name: "BMS points schedule identifying sub meters.")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_5_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_52, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Energy & Water Use Sub-metering"))
REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_73 = Requirement.create!(name: "Sustainability Education & Awareness Plan")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_1_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_73, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sustainability Education & Awareness Plan"))
REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_73 = Requirement.create!(name: "Any supporting documentation (e.g. Print materials, digital materials, displays and signage's) that demonstrates compliance")
SchemeCriteriaRequirement.create!(requirement: REQUIREMENT_2_FOR_V2_1_CERTIFICATE_0_SCHEME_Workers_Accomodation_false_CATEGORY_Management___Operations_CRITERION_73, scheme_criterion: SchemeCriterion.find_by(scheme_category: SchemeCategory.find_by(name: "Management & Operations", scheme: Scheme.find_by(name: "Workers Accomodation", gsas_version: "2.1", renovation: false, certificate: Certificate.letter_of_conformance)), name: "Sustainability Education & Awareness Plan"))
