# ruby encoding: utf-8
# Category's
Category.create!(code: 'UC', name: 'Urban Connectivity')
Category.create!(code: 'S', name: 'Site')
Category.create!(code: 'E', name: 'Energy')
Category.create!(code: 'W', name: 'Water')
Category.create!(code: 'M', name: 'Materials')
Category.create!(code: 'IE', name: 'Indoor Environment')
Category.create!(code: 'CE', name: 'Cultural & Economic')
Category.create!(code: 'MO', name: 'Management & Operations')

# Criterion.create!(name: 'Land Preservation', category: Category.find_by_code('S'))
# Criterion.create!(name: 'Water Body Preservation', category: Category.find_by_code('S'))
# Criterion.create!(name: 'Habitat Preservation', category: Category.find_by_code('S'))
# Criterion.create!(name: 'Vegetation', category: Category.find_by_code('S'))
# Criterion.create!(name: 'Desertification', category: Category.find_by_code('S'))
# Criterion.create!(name: 'Rainwater Runoff', category: Category.find_by_code('S'))
# Criterion.create!(name: 'Heat Island Effect', category: Category.find_by_code('S'))
# Criterion.create!(name: 'Adverse Wind Conditions', category: Category.find_by_code('S'))
# Criterion.create!(name: 'Noise Pollution', category: Category.find_by_code('S'))
# Criterion.create!(name: 'Light Pollution', category: Category.find_by_code('S'))
# Criterion.create!(name: 'Shading of Adjacent Properties', category: Category.find_by_code('S'))
# Criterion.create!(name: 'Parking Footprint', category: Category.find_by_code('S'))
# Criterion.create!(name: 'Shading', category: Category.find_by_code('S'))
# Criterion.create!(name: 'Illumination', category: Category.find_by_code('S'))
# Criterion.create!(name: 'Pathways', category: Category.find_by_code('S'))
# Criterion.create!(name: 'Mixed Use', category: Category.find_by_code('S'))
#
# Criterion.create!(name: 'Energy Demand Performance', category: Category.find_by_code('E'))
# Criterion.create!(name: 'Energy Delivery Performance', category: Category.find_by_code('E'))
# Criterion.create!(name: 'Fossil Fuel Conservation', category: Category.find_by_code('E'))
# Criterion.create!(name: 'CO2 Emissions', category: Category.find_by_code('E'))
# Criterion.create!(name: 'NOx, SOx, & Particulate Matter', category: Category.find_by_code('E'))
#
# Criterion.create!(name: 'Water Consumption', category: Category.find_by_code('W'))
#
# Criterion.create!(name: 'Regional Materials', category: Category.find_by_code('M'))
# Criterion.create!(name: 'Responsible Sourcing of Materials', category: Category.find_by_code('M'))
# Criterion.create!(name: 'Recycled Materials', category: Category.find_by_code('M'))
# Criterion.create!(name: 'Materials Reuse', category: Category.find_by_code('M'))
# Criterion.create!(name: 'Structure Reuse', category: Category.find_by_code('M'))
# Criterion.create!(name: 'Design for Disassembly', category: Category.find_by_code('M'))
#
# Criterion.create!(name: 'Thermal Comfort', category: Category.find_by_code('IE'))
# Criterion.create!(name: 'Natural Ventilation', category: Category.find_by_code('IE'))
# Criterion.create!(name: 'Mechanical Ventilation', category: Category.find_by_code('IE'))
# Criterion.create!(name: 'Illumination Levels', category: Category.find_by_code('IE'))
# Criterion.create!(name: 'Daylight', category: Category.find_by_code('IE'))
# Criterion.create!(name: 'Glare Control', category: Category.find_by_code('IE'))
# Criterion.create!(name: 'Views', category: Category.find_by_code('IE'))
# Criterion.create!(name: 'Acoustic Quality', category: Category.find_by_code('IE'))
# Criterion.create!(name: 'Low-Emitting Materials', category: Category.find_by_code('IE'))
# Criterion.create!(name: 'Indoor Chemical & Pollutant Source Control', category: Category.find_by_code('IE'))
#
# Criterion.create!(name: 'Heritage & Cultural Identity', category: Category.find_by_code('CE'))
# Criterion.create!(name: 'Support of National Economy', category: Category.find_by_code('CE'))
#
# Criterion.create!(name: 'Commissioning Plan', category: Category.find_by_code('MO'))
# Criterion.create!(name: 'Organic Waste Management', category: Category.find_by_code('MO'))
# Criterion.create!(name: 'Recycling Management', category: Category.find_by_code('MO'))
# Criterion.create!(name: 'Leak Detection', category: Category.find_by_code('MO'))
# Criterion.create!(name: 'Energy & Water Use Sub-metering', category: Category.find_by_code('MO'))
# Criterion.create!(name: 'Automated Control System', category: Category.find_by_code('MO'))
# Criterion.create!(name: 'Hospitality Management Plan', category: Category.find_by_code('MO'))
# Criterion.create!(name: 'Sustainability Education & Awareness Plan', category: Category.find_by_code('MO'))
# Criterion.create!(name: 'Building Legacy', category: Category.find_by_code('MO'))

# Custom criteria for release 1
Category.create!(code: 'EX', name: 'Energy (existing buildings)')
Category.create!(code: 'WX', name: 'Water (existing buildings)')
Criterion.create!(name: "Energy consumption", description: "TODO Energy consumption description", measurement: "TODO Energy consumption measurement", measurement_principle: "TODO Energy consumption measurement principle", category: Category.find_by_code('EX'))
Criterion.create!(name: "Water consumption", description: "TODO Water consumption description", measurement: "TODO Water consumption measurement", measurement_principle: "TODO Water consumption measurement principle", category: Category.find_by_code('WX'))

Certificate.create!(label: 'Letter of Conformance', certificate_type: :design_type, assessment_stage: :design_stage)
Certificate.create!(label: 'Final Design Certificate', certificate_type: :design_type, assessment_stage: :construction_stage)
Certificate.create!(label: 'Construction Certificate', certificate_type: :construction_type, assessment_stage: :construction_stage)
Certificate.create!(label: 'Operations Certificate', certificate_type: :operations_type, assessment_stage: :operations_stage)

Scheme.create!(label: 'Commercial', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:construction_stage]))
Scheme.create!(label: 'Commercial', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:design_stage]))
Scheme.create!(label: 'Core + Shell', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:construction_stage]))
Scheme.create!(label: 'Core + Shell', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:design_stage]))
# Scheme.create!(label: 'Districts', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:construction_stage]))
# Scheme.create!(label: 'Districts', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:design_stage]))
Scheme.create!(label: 'Education', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:construction_stage]))
Scheme.create!(label: 'Education', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:design_stage]))
# Scheme.create!(label: 'Healthcare', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:construction_stage]))
# Scheme.create!(label: 'Healthcare', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:design_stage]))
Scheme.create!(label: 'Hotels', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:construction_stage]))
Scheme.create!(label: 'Hotels', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:design_stage]))
Scheme.create!(label: 'Light Industry', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:construction_stage]))
Scheme.create!(label: 'Light Industry', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:design_stage]))
Scheme.create!(label: 'Mosques', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:construction_stage]))
Scheme.create!(label: 'Mosques', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:design_stage]))
# Scheme.create!(label: 'Parks', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:construction_stage]))
# Scheme.create!(label: 'Parks', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:design_stage]))
# Scheme.create!(label: 'Railways', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:construction_stage]))
# Scheme.create!(label: 'Railways', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:design_stage]))
Scheme.create!(label: 'Residential - Group', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:construction_stage]))
Scheme.create!(label: 'Residential - Group', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:design_stage]))
Scheme.create!(label: 'Residential - Single', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:construction_stage]))
Scheme.create!(label: 'Residential - Single', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:design_stage]))
# Scheme.create!(label: 'Sports', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:construction_stage]))
# Scheme.create!(label: 'Sports', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:design_type], assessment_stage: Certificate.assessment_stages[:design_stage]))

Scheme.create!(label: 'Construction', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:construction_type], assessment_stage: Certificate.assessment_stages[:construction_stage]))
Scheme.create!(label: 'Operations', version: '3.0', certificate: Certificate.find_by(certificate_type: Certificate.certificate_types[:operations_type], assessment_stage: Certificate.assessment_stages[:operations_stage]))
# todo: Scheme.create!(label: 'Workers\' Accommodation', version: '3.0')
# todo: Scheme.create!(label: 'Bespoke Schemes', version: '3.0')

SchemeCriterion.create!(scheme: Scheme.find_by_label('Construction'), criterion: Criterion.find_by_name('Energy consumption'), weight: 100, code: 'EX.1', score_description: "Construction Dummy", score_combination_type: SchemeCriterion.score_combination_types[:score_combination_only_a], score_a: YAML.load("score_name: Construction\nscore_values: {-1: BAD, 3: GOOD}\n"))
sc_op_ex1 = SchemeCriterion.create!(scheme: Scheme.find_by_label('Operations'), criterion: Criterion.find_by_name('Energy consumption'), weight: 50, code: 'EX.1', score_description: "ENERGY SCORE", score_combination_type: SchemeCriterion.score_combination_types[:score_combination_only_a], score_a: YAML.load("score_name: ENERGY USAGE\nscore_values: {-1: BAD, 3: GOOD}\n"))
sc_op_wx1 = SchemeCriterion.create!(scheme: Scheme.find_by_label('Operations'), criterion: Criterion.find_by_name('Water consumption'), weight: 50, code: 'WX.1', score_description: "WATER SCORE", score_combination_type: SchemeCriterion.score_combination_types[:score_combination_average], score_a: YAML.load("score_name: WATER A\nscore_values: {-1: BAD, 3: GOOD\n}\n"), score_b: YAML.load("score_name: WATER B\nscore_values: {0: BAD, 1: GOOD\n}\n"))
# sc_op_wx1 = SchemeCriterion.create!(scheme: Scheme.find_by_label('Operations'), criterion: Criterion.find_by_name('Water consumption'), weight: 50, code: 'WX.1', score_description: "WATER SCORE", score_a: YAML.load("score_name: WATER A\nscore_values: {-1: BAD, 3: GOOD\n}\n"), score_b: YAML.load("score_name: WATER B\nscore_values: {0: BAD, 1: GOOD\n}\n"))

ec1 = Calculator.create!(name: 'Calculator::Dummy')
wc1 = Calculator.create!(name: 'Calculator::Dummy')
req1 = Requirement.create!(calculator: ec1, label: 'Energy calculator')
req2 = Requirement.create!(calculator: wc1, label: 'Water calculator')
req3 = Requirement.create!(label: 'Specifications and documentation regarding the available infrastructure showing that the existing structures can handle the additional load from the building')
SchemeCriteriaRequirement.create!(scheme_criterion: sc_op_ex1, requirement: req1)
SchemeCriteriaRequirement.create!(scheme_criterion: sc_op_wx1, requirement: req2)
SchemeCriteriaRequirement.create!(scheme_criterion: sc_op_ex1, requirement: req3)
Field.create!(label: 'Yearly energy usage', name: 'kwh_year', calculator: ec1, datum_type: 'FieldDatum::IntegerValue')
Field.create!(label: 'Yearly water usage', name: 'l_year', suffix: 'liter', help_text: 'Please provide the yearly water usage in liter.', calculator: wc1, datum_type: 'FieldDatum::IntegerValue')
